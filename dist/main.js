(()=>{const e=document.querySelector(".view-more"),t=document.querySelector(".more"),s=document.querySelector(".projects"),d=document.querySelector(".folder"),n=(document.querySelector(".menu"),document.querySelector(".mainMain")),a=document.querySelector(".bg"),i=document.querySelector(".bgTwo"),o=document.querySelector(".inbox"),l=[{name:"inbox",tasks:[]}];let c,r,m=[],u=document.querySelectorAll(".delete");const p=document.querySelector(".addItem"),v=document.querySelector(".addProject"),L=document.querySelector(".close"),y=document.querySelector(".add"),g=document.querySelector(".addProjectInput"),k=document.querySelector(".root");let C=document.querySelectorAll(".projectsNameInPage");const h=document.querySelector(".inboxClick"),b=document.querySelector(".nameTasks"),x=document.querySelector(".descriptiontasks"),E=document.querySelector(".dateTasks"),q=document.querySelector(".priorityTasksInput"),S=document.querySelector(".addNav"),f=document.querySelector(".addtasks"),j=document.querySelector(".closeTasksClick"),P=document.querySelector(".addTasksButton"),w=document.querySelector(".content"),M=document.querySelector(".noValidOne"),T=document.querySelector(".noValidTwo"),B=document.querySelector(".noValidThree"),$=document.querySelector(".noValidFour");document.querySelector(".noValidFive"),o.addEventListener("click",(()=>{c="inbox",A()})),j.addEventListener("click",(()=>{b.value="",x.value="",E.value="",q.value="",f.classList.toggle("visiblity"),a.classList.toggle("visiblity")})),S.addEventListener("click",(()=>{f.classList.toggle("visiblity"),a.classList.toggle("visiblity"),d.classList.remove("z-index-toggle"),I()}));const I=()=>{T.classList.add("visiblity"),b.style.border="1px solid black",B.classList.add("visiblity"),x.style.border="1px solid black",$.classList.add("visiblity"),E.style.border="1px solid black"};P.addEventListener("click",(()=>{if(!(()=>{let e=0;return b.value?(T.classList.add("visiblity"),b.style.border="1px solid black"):(T.classList.remove("visiblity"),b.style.border="1px solid red",e++),x.value?(B.classList.add("visiblity"),x.style.border="1px solid black"):(B.classList.remove("visiblity"),x.style.border="1px solid red",e++),E.value?($.classList.add("visiblity"),E.style.border="1px solid black"):($.classList.remove("visiblity"),E.style.border="1px solid red",e++),{count:e}})().count){if(c)for(let e=0;e<l.length;e++)l[e].name==c&&(l[e].tasks.push({name:b.value,decription:x.value,date:E.value,priority:q.value,id:Math.floor(1e3*Math.random())}),r=e);else c="inbox",l[0].tasks.push({name:b.value,decription:x.value,date:E.value,priority:q.value,id:Math.floor(1e3*Math.random()),checked:!1}),r=0;A(),console.log(l),console.log(c),u=document.querySelectorAll(".delete"),b.value="",x.value="",f.classList.toggle("visiblity"),a.classList.toggle("visiblity")}})),h.addEventListener("click",(()=>{c="inbox",A(),console.log(l)})),document.addEventListener("click",(e=>{if(e.target.classList.contains("projectsNameInPage")){for(let t=0;t<l.length;t++)l[t].name==e.target.textContent&&(c=l[t].name);A()}})),document.addEventListener("click",(e=>{e.target.classList.contains("menu")&&(d.classList.toggle("projects-folder"),d.classList.toggle("projects-folderClick"),w.classList.toggle("projects-content"),w.classList.toggle("projects-contentClick"),n.classList.toggle("mainMain"),n.classList.toggle("mainMainClick"))})),p.addEventListener("click",(()=>{v.classList.toggle("visiblity"),i.classList.toggle("visiblity"),d.classList.remove("z-index-toggle"),M.classList.add("visiblity"),g.style.border="1px solid black"})),L.addEventListener("click",(()=>{g.value="",i.classList.toggle("visiblity"),v.classList.add("visiblity")})),y.addEventListener("click",(()=>{if(!g.value)return M.classList.remove("visiblity"),void(g.style.border="1px solid red");l.push({name:g.value,tasks:[]}),c=g.value,g.value="",v.classList.add("visiblity"),i.classList.toggle("visiblity"),H(),A()})),document.addEventListener("click",(e=>{if(e.target.classList.contains("viewMoreBtn")){let t=e.target.dataset.id;for(let e=0;e<l.length;e++)l[e].name==c&&(_=e);for(let e=0;e<l[_].tasks.length;e++)l[_].tasks[e].id==t&&(z=e);F()}})),document.addEventListener("click",(e=>{if(e.target.classList.contains("delete")){for(let e=0;e<l.length;e++)l[e].name==c&&(index=e);for(let t=0;t<l[index].tasks.length;t++)l[index].tasks[t].id==e.target.dataset.id&&(indexTwo=t);l[index].tasks.splice(indexTwo,1),A(),console.log(l)}})),document.addEventListener("click",(e=>{let t,s;if(!e.target.classList.contains("checkbox"))return!1;if(e.target.checked){for(let e=0;e<l.length;e++)l[e].name==c&&(t=e);for(let d=0;d<l[t].tasks.length;d++)l[t].tasks[d].id==e.target.dataset.id&&(s=d);m.push(l[t].tasks[s]),l[t].tasks.splice(s,1),console.log(l),A()}})),document.addEventListener("click",(e=>{e.target.classList.contains("done")&&(console.log([...m]),c="complited",V())})),document.addEventListener("click",(e=>{e.target.classList.contains("viewMoreBtnComplited")&&N(e.target.dataset.id)}));const N=e=>{let t;for(let s=0;s<m.length;s++)e==m[s].id&&(t=s);const s=document.createElement("div");s.classList.add("moreContent");const d=document.createElement("div");d.classList.add("closeBtnMore"),d.textContent="close",s.appendChild(d);const n=document.createElement("div");n.classList.add("nameProject-and-description");const a=document.createElement("div");a.textContent=`name: ${m[t].name}`,a.classList.add("nameProject"),n.appendChild(a);const i=document.createElement("div");i.textContent=`description: ${m[t].decription}`,i.classList.add("descriptionProject"),n.appendChild(i),s.appendChild(n);const o=document.createElement("div");o.classList.add("date-and-priority");const l=document.createElement("div");o.textContent=`date: ${m[t].date}`,l.classList.add("dateProject"),o.appendChild(l);const c=document.createElement("div");c.textContent=`priority: ${m[t].priority}`,c.classList.add("priorityProject"),o.appendChild(c),s.appendChild(o),document.body.appendChild(s)},V=()=>{w.textContent=c;for(let e=0;e<m.length;e++){const t=document.createElement("div");t.classList.add("manyProjects");const s=document.createElement("div");s.dataset.id=m[e].id,s.classList.add("tasks");const d=document.createElement("div");d.classList.add("name-and-priority");const n=document.createElement("div");d.appendChild(n);const a=document.createElement("div");a.textContent=m[e].name,a.classList.add("name"),d.appendChild(a),s.appendChild(d);const i=document.createElement("div");i.classList.add("delete");const o=document.createElement("button");o.classList.add("viewMoreBtnComplited"),o.textContent="view more",o.dataset.id=m[e].id,i.appendChild(o),document.createElement("div").classList.add("priority"),s.appendChild(i),t.appendChild(s),w.appendChild(t)}},A=()=>{let e;w.textContent="",(e=>{const t=document.createElement("div");t.textContent=e,t.classList.add("nowPageName"),w.appendChild(t)})(c);for(let t=0;t<l.length;t++)l[t].name==c&&(e=t);for(let t=0;t<l[e].tasks.length;t++){const s=document.createElement("div");s.classList.add("manyProjects");const d=document.createElement("div");d.dataset.id=l[e].tasks[t].id,d.classList.add("tasks");const n=document.createElement("div");n.classList.add("name-and-priority");const a=document.createElement("div"),i=document.createElement("input");i.dataset.id=l[e].tasks[t].id,i.classList.add("checkbox"),i.type="checkbox",a.appendChild(i),n.appendChild(a);const o=document.createElement("div");o.textContent=l[e].tasks[t].name,o.classList.add("name"),n.appendChild(o),d.appendChild(n);const c=document.createElement("div");c.classList.add("delete");const r=document.createElement("button");r.classList.add("viewMoreBtn"),r.textContent="view more",r.dataset.id=l[e].tasks[t].id,c.appendChild(r);const m=document.createElement("span");m.classList.add("material-icons"),m.classList.add("delete"),m.textContent="delete",m.dataset.id=l[e].tasks[t].id,document.createElement("div").classList.add("priority"),c.appendChild(m),d.appendChild(c),s.appendChild(d),w.appendChild(s)}};let _,z;document.addEventListener("click",(e=>{e.target.classList.contains("closeBtnMore")&&[...document.getElementsByClassName("moreContent")].map((e=>e&&e.remove()))}));const F=()=>{const e=document.createElement("div");e.classList.add("moreContent");const t=document.createElement("div");t.classList.add("closeBtnMore"),t.textContent="close",e.appendChild(t);const s=document.createElement("div");s.classList.add("nameProject-and-description");const d=document.createElement("div");d.textContent=`name: ${l[_].tasks[z].name}`,d.classList.add("nameProject"),s.appendChild(d);const n=document.createElement("div");n.textContent=`description: ${l[_].tasks[z].decription}`,n.classList.add("descriptionProject"),s.appendChild(n),e.appendChild(s);const a=document.createElement("div");a.classList.add("date-and-priority");const i=document.createElement("div");a.textContent=`date: ${l[_].tasks[z].date}`,i.classList.add("dateProject"),a.appendChild(i);const o=document.createElement("div");o.textContent=`priority: ${l[_].tasks[z].priority}`,o.classList.add("priorityProject"),a.appendChild(o),e.appendChild(a),document.body.appendChild(e)},H=()=>{for(key in k.textContent="",l)if("inbox"==l[key].name);else{const e=document.createElement("p");e.classList.add("projectsNameInPage"),e.textContent=l[key].name,k.appendChild(e)}C=document.querySelectorAll(".projectsNameInPage")};e.addEventListener("click",(()=>{"expand_more"==t.textContent?t.textContent="expand_less":t.textContent="expand_more",s.classList.toggle("visiblity"),d.classList.toggle("overflow"),d.classList.toggle("overflowHidden")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,