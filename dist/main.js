(()=>{"use strict";(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("nav");t.classList.add("nav");const s=document.createElement("div");s.classList.add("nav-inbox");const d=document.createElement("span");d.classList.add("menu"),d.classList.add("material-icons"),d.textContent="menu",s.appendChild(d);const a=document.createElement("span");a.classList.add("inbox"),a.classList.add("material-icons"),a.textContent="inbox",s.appendChild(a),t.appendChild(s);const i=document.createElement("div");i.classList.add("nav-done");const n=document.createElement("span");n.classList.add("addNav"),n.classList.add("material-icons"),n.textContent="add",i.appendChild(n);const l=document.createElement("span");l.classList.add("done"),l.classList.add("material-icons"),l.textContent="done",i.appendChild(l),t.appendChild(i),e.appendChild(t)})();const e=document.querySelector(".view-more"),t=document.querySelector(".more"),s=document.querySelector(".projects"),d=document.querySelector(".folder"),a=(document.querySelector(".menu"),document.querySelector(".mainMain")),i=document.querySelector(".bg"),n=document.querySelector(".bgTwo"),l=[],o=document.querySelector(".inbox"),c=[l,{name:"inbox",tasks:[]}];let r,m;window.localStorage.setItem("newArr",JSON.stringify(c));let u=document.querySelectorAll(".delete");document.querySelector(".allClick").addEventListener("click",(()=>{r="all",p()}));const p=()=>{let e;P.textContent="",se(r);for(let t=1;t<c.length;t++)for(let s=0;s<c[t].tasks.length;s++){"low"==c[t].tasks[s].priority?e="lightblue":"medium"==c[t].tasks[s].priority?e="orange":"high"==c[t].tasks[s].priority&&(e="red");const d=document.createElement("div");d.classList.add("manyProjects");const a=document.createElement("div");a.dataset.id=c[t].tasks[s].id,a.classList.add("tasks"),a.classList.add(e);const i=document.createElement("div");i.classList.add("name-and-priority");const n=document.createElement("div"),l=document.createElement("input");l.dataset.id=c[t].tasks[s].id,l.classList.add("checkbox"),l.type="checkbox",n.appendChild(l),i.appendChild(n);const o=document.createElement("div");o.textContent=c[t].tasks[s].name,o.classList.add("name"),i.appendChild(o),a.appendChild(i);const r=document.createElement("div");r.classList.add("delete");const m=document.createElement("button");m.classList.add("editButton"),m.textContent="edit",m.dataset.id=c[t].tasks[s].id,r.appendChild(m);const u=document.createElement("button");u.classList.add("viewMoreBtn"),u.textContent="view more",u.dataset.id=c[t].tasks[s].id,r.appendChild(u);const p=document.createElement("span");p.classList.add("material-icons"),p.classList.add("delete"),p.textContent="delete",p.dataset.id=c[t].tasks[s].id,document.createElement("div").classList.add("priority"),r.appendChild(p),a.appendChild(r),d.appendChild(a),P.appendChild(d)}},v=document.querySelector(".addItem"),y=document.querySelector(".addProject"),L=document.querySelector(".close"),g=document.querySelector(".add"),k=document.querySelector(".addProjectInput"),b=document.querySelector(".root");let h=document.querySelectorAll(".projectsNameInPage");const C=document.querySelector(".inboxClick"),E=document.querySelector(".nameTasks"),x=document.querySelector(".descriptiontasks"),S=document.querySelector(".dateTasks"),q=document.querySelector(".priorityTasksInput"),w=document.querySelector(".addNav"),f=document.querySelector(".addtasks"),T=document.querySelector(".closeTasksClick"),j=document.querySelector(".addTasksButton"),P=document.querySelector(".content"),N=document.querySelector(".noValidOne"),B=document.querySelector(".noValidTwo"),M=document.querySelector(".noValidThree"),I=document.querySelector(".noValidFour"),A=document.querySelector(".noValidFive");o.addEventListener("click",(()=>{r="inbox",de()})),T.addEventListener("click",(()=>{E.value="",x.value="",S.value="",q.value="",f.classList.toggle("visiblity"),i.classList.toggle("visiblity")})),w.addEventListener("click",(()=>{f.classList.toggle("visiblity"),i.classList.toggle("visiblity"),d.classList.remove("z-index-toggle"),O()}));const O=()=>{B.classList.add("visiblity"),E.style.border="1px solid black",M.classList.add("visiblity"),x.style.border="1px solid black",I.classList.add("visiblity"),S.style.border="1px solid black",A.classList.add("visiblity"),q.style.border="1px solid black"};j.addEventListener("click",(()=>{if(!(()=>{let e=0;return E.value?(B.classList.add("visiblity"),E.style.border="1px solid black"):(B.classList.remove("visiblity"),E.style.border="1px solid red",e++),x.value?(M.classList.add("visiblity"),x.style.border="1px solid black"):(M.classList.remove("visiblity"),x.style.border="1px solid red",e++),S.value?(I.classList.add("visiblity"),S.style.border="1px solid black"):(I.classList.remove("visiblity"),S.style.border="1px solid red",e++),q.value?(A.classList.add("visiblity"),q.style.border="1px solid black"):(A.classList.remove("visiblity"),q.style.border="1px solid red",e++),{count:e}})().count){if("complited"==r||"all"==r)r="inbox",c[1].tasks.push({name:E.value,decription:x.value,date:S.value,priority:q.value,id:Math.floor(1e5*Math.random())}),m=0;else if(r)for(let e=0;e<c.length;e++)c[e].name==r&&(c[e].tasks.push({name:E.value,decription:x.value,date:S.value,priority:q.value,id:Math.floor(1e5*Math.random())}),m=e);else r="inbox",c[1].tasks.push({name:E.value,decription:x.value,date:S.value,priority:q.value,id:Math.floor(1e5*Math.random())}),m=0;de(),window.localStorage.setItem("newArr",JSON.stringify(c)),console.log(c),console.log(r),u=document.querySelectorAll(".delete"),E.value="",x.value="",f.classList.toggle("visiblity"),i.classList.toggle("visiblity")}})),C.addEventListener("click",(()=>{r="inbox",de(),console.log(c)})),document.addEventListener("click",(e=>{if(e.target.classList.contains("projectsNameInPage")){for(let t=0;t<c.length;t++)c[t].name==e.target.textContent&&(r=c[t].name);de()}})),document.addEventListener("click",(e=>{e.target.classList.contains("menu")&&(d.classList.toggle("projects-folder"),d.classList.toggle("projects-folderClick"),P.classList.toggle("projects-content"),P.classList.toggle("projects-contentClick"),a.classList.toggle("mainMain"),a.classList.toggle("mainMainClick"))})),v.addEventListener("click",(()=>{y.classList.toggle("visiblity"),n.classList.toggle("visiblity"),d.classList.remove("z-index-toggle"),N.classList.add("visiblity"),k.style.border="1px solid black"})),L.addEventListener("click",(()=>{k.value="",n.classList.toggle("visiblity"),y.classList.add("visiblity")})),g.addEventListener("click",(()=>{if(!k.value)return N.classList.remove("visiblity"),void(k.style.border="1px solid red");c.push({name:k.value,tasks:[]}),r=k.value,k.value="",y.classList.add("visiblity"),n.classList.toggle("visiblity"),le(),de(),window.localStorage.setItem("newArr",JSON.stringify(c))})),document.addEventListener("click",(e=>{if(e.target.classList.contains("viewMoreBtn")){let t=e.target.dataset.id;for(let e=1;e<c.length;e++)for(let s=0;s<c[e].tasks.length;s++)c[e].tasks[s].id==t&&(ae=e,ie=s);ne()}}));const V=document.querySelector(".cancel"),J=document.querySelector(".deleteTasks"),$=document.querySelector(".bgFour");document.addEventListener("click",(e=>{e.target.classList.contains("delete")&&($.classList.remove("visiblity"),V.addEventListener("click",(()=>{$.classList.add("visiblity")})),J.addEventListener("click",(()=>{for(let t=1;t<c.length;t++)for(let s=0;s<c[t].tasks.length;s++)c[t].tasks[s].id==e.target.dataset.id&&(index=t,indexTwo=s);c[index].tasks.splice(indexTwo,1),"all"==r?p():de(),console.log(c),$.classList.add("visiblity"),window.localStorage.setItem("newArr",JSON.stringify(c))})))})),document.addEventListener("click",(e=>{let t,s;if(!e.target.classList.contains("checkbox"))return!1;if(e.target.checked){for(let d=1;d<c.length;d++)for(let a=0;a<c[d].tasks.length;a++)c[d].tasks[a].id==e.target.dataset.id&&(t=d,s=a);l.push(c[t].tasks[s]),c[t].tasks.splice(s,1),"all"==r?p():de(),window.localStorage.setItem("newArr",JSON.stringify(c))}})),document.addEventListener("click",(e=>{e.target.classList.contains("done")&&(console.log([...l]),r="complited",F(),window.localStorage.setItem("newArr",JSON.stringify(c)))})),document.addEventListener("click",(e=>{e.target.classList.contains("viewMoreBtnComplited")&&U(e.target.dataset.id)}));const U=e=>{let t;for(let s=0;s<l.length;s++)e==l[s].id&&(t=s);const s=document.createElement("div");s.classList.add("moreContent");const d=document.createElement("div");d.classList.add("material-icons"),d.classList.add("closeBtnMore"),d.textContent="close",s.appendChild(d);const a=document.createElement("div");a.classList.add("nameProject-and-description");const i=document.createElement("div");i.textContent=`name: ${l[t].name}`,i.classList.add("nameProject"),a.appendChild(i);const n=document.createElement("div");n.textContent=`description: ${l[t].decription}`,n.classList.add("descriptionProject"),a.appendChild(n),s.appendChild(a);const o=document.createElement("div");o.classList.add("date-and-priority");const c=document.createElement("div");c.textContent=`date: ${l[t].date}`,c.classList.add("dateProject"),o.appendChild(c);const r=document.createElement("div");r.textContent=`priority: ${l[t].priority}`,r.classList.add("priorityProject"),o.appendChild(r),s.appendChild(o);const m=document.createElement("div");m.classList.add("bgThree"),m.appendChild(s),document.body.appendChild(m)},F=()=>{let e;P.textContent="",se(r);for(let t=0;t<l.length;t++){"low"==l[t].priority?e="lightblue":"medium"==l[t].priority?e="orange":"high"==l[t].priority&&(e="red");const s=document.createElement("div");s.classList.add("manyProjects");const d=document.createElement("div");d.dataset.id=l[t].id,d.classList.add("tasks"),d.classList.add(e);const a=document.createElement("div");a.classList.add("name-and-priority");const i=document.createElement("div");a.appendChild(i);const n=document.createElement("div");n.textContent=l[t].name,n.classList.add("name"),a.appendChild(n),d.appendChild(a);const o=document.createElement("div");o.classList.add("delete");const c=document.createElement("button");c.classList.add("viewMoreBtnComplited"),c.textContent="view more",c.dataset.id=l[t].id,o.appendChild(c);const r=document.createElement("span");r.classList.add("material-icons"),r.textContent="delete",r.classList.add("complitedTasksDeleteButton"),r.dataset.id=l[t].id,o.appendChild(r),document.createElement("div").classList.add("priority"),d.appendChild(o),s.appendChild(d),P.appendChild(s)}},D=document.querySelector(".bgFive"),_=document.querySelector(".deleteTasksTwo"),z=document.querySelector(".cancelTwo");document.addEventListener("click",(e=>{e.target.classList.contains("complitedTasksDeleteButton")&&(D.classList.remove("visiblity"),z.addEventListener("click",(()=>{D.classList.add("visiblity")})),_.addEventListener("click",(()=>{for(let t=0;t<l.length;t++)l[t].id==e.target.dataset.id&&l.splice(t,1);F(),console.log(c),D.classList.add("visiblity"),window.localStorage.setItem("newArr",JSON.stringify(c))})))}));const H=document.querySelector(".bgSix"),G=document.querySelector(".closeTasksUpdate"),K=document.querySelector(".updateNameTasks"),Q=document.querySelector(".updateDescriptiontasks"),R=document.querySelector(".updateDateTasks"),W=document.querySelector(".updatePriorityTasksInput"),X=document.querySelector(".noValidUpdateOne"),Y=document.querySelector(".noValidUpdateTwo"),Z=document.querySelector(".noValidUpdateThree"),ee=document.querySelector(".noValidUpdateFour"),te=document.querySelector(".UpdateTasksButton");document.addEventListener("click",(e=>{let t=0,s=0;if(e.target.classList.contains("editButton")){for(let d=1;d<c.length;d++)for(let a=0;a<c[d].tasks.length;a++)c[d].tasks[a].id==e.target.dataset.id&&(t=d,s=a);K.value=c[t].tasks[s].name,Q.value=c[t].tasks[s].decription,R.value=c[t].tasks[s].date,W.value=c[t].tasks[s].priority,H.classList.remove("visiblity"),console.log(t,s),G.addEventListener("click",(()=>{K.value="",Q.value="",R.value="",W.value="",H.classList.add("visiblity")})),te.addEventListener("click",(()=>{if(!(()=>{let e=0;return K.value?(X.classList.add("visiblity"),K.style.border="1px solid black"):(X.classList.remove("visiblity"),K.style.border="1px solid red",e++),Q.value?(Y.classList.add("visiblity"),Q.style.border="1px solid black"):(Y.classList.remove("visiblity"),Q.style.border="1px solid red",e++),R.value?(Z.classList.add("visiblity"),R.style.border="1px solid black"):(Z.classList.remove("visiblity"),R.style.border="1px solid red",e++),W.value?(ee.classList.add("visiblity"),W.style.border="1px solid black"):(ee.classList.remove("visiblity"),W.style.border="1px solid red",e++),{countTest:e}})().countTest)try{const d={name:K.value,decription:Q.value,date:R.value,priority:W.value,id:e.target.dataset.id};c[t].tasks.splice(s,1,d),console.log(t,s),K.value="",Q.value="",R.value="",W.value="",t=0,s=0,H.classList.add("visiblity"),"all"==r?p():de(),console.log(c),window.localStorage.setItem("newArr",JSON.stringify(c))}catch(e){console.log(e)}}))}}));const se=e=>{const t=document.createElement("div");t.textContent=e,t.classList.add("nowPageName"),P.appendChild(t)},de=()=>{let e,t;P.textContent="",se(r);for(let t=0;t<c.length;t++)c[t].name==r&&(e=t);for(let s=0;s<c[e].tasks.length;s++){"low"==c[e].tasks[s].priority?t="lightblue":"medium"==c[e].tasks[s].priority?t="orange":"high"==c[e].tasks[s].priority&&(t="red");const d=document.createElement("div");d.classList.add("manyProjects");const a=document.createElement("div");a.dataset.id=c[e].tasks[s].id,a.classList.add("tasks"),a.classList.add(t);const i=document.createElement("div");i.classList.add("name-and-priority");const n=document.createElement("div"),l=document.createElement("input");l.dataset.id=c[e].tasks[s].id,l.classList.add("checkbox"),l.type="checkbox",n.appendChild(l),i.appendChild(n);const o=document.createElement("div");o.textContent=c[e].tasks[s].name,o.classList.add("name"),i.appendChild(o),a.appendChild(i);const r=document.createElement("div");r.classList.add("delete");const m=document.createElement("button");m.classList.add("editButton"),m.textContent="edit",m.dataset.id=c[e].tasks[s].id,r.appendChild(m);const u=document.createElement("button");u.classList.add("viewMoreBtn"),u.textContent="view more",u.dataset.id=c[e].tasks[s].id,r.appendChild(u);const p=document.createElement("span");p.classList.add("material-icons"),p.classList.add("delete"),p.textContent="delete",p.dataset.id=c[e].tasks[s].id,document.createElement("div").classList.add("priority"),r.appendChild(p),a.appendChild(r),d.appendChild(a),P.appendChild(d)}};let ae,ie;document.addEventListener("click",(e=>{e.target.classList.contains("closeBtnMore")&&([...document.getElementsByClassName("moreContent")].map((e=>e&&e.remove())),[...document.getElementsByClassName("bgThree")].map((e=>e&&e.remove())))}));const ne=()=>{const e=document.createElement("div");e.classList.add("moreContent");const t=document.createElement("div");t.classList.add("closeBtnMore"),t.classList.add("material-icons"),t.textContent="close",e.appendChild(t);const s=document.createElement("div");s.classList.add("nameProject-and-description");const d=document.createElement("div");d.textContent=`name: ${c[ae].tasks[ie].name}`,d.classList.add("nameProject"),s.appendChild(d);const a=document.createElement("div");a.textContent=`description: ${c[ae].tasks[ie].decription}`,a.classList.add("descriptionProject"),s.appendChild(a),e.appendChild(s);const i=document.createElement("div");i.classList.add("date-and-priority");const n=document.createElement("div");n.textContent=`date: ${c[ae].tasks[ie].date}`,n.classList.add("dateProject"),i.appendChild(n);const l=document.createElement("div");l.textContent=`priority: ${c[ae].tasks[ie].priority}`,l.classList.add("priorityProject"),i.appendChild(l),e.appendChild(i);const o=document.createElement("div");o.classList.add("bgThree"),o.appendChild(e),document.body.appendChild(o)},le=()=>{for(key in b.textContent="",c)if("inbox"==c[key].name);else{const e=document.createElement("p");e.classList.add("projectsNameInPage"),e.textContent=c[key].name,e.textContent&&b.appendChild(e)}h=document.querySelectorAll(".projectsNameInPage")};e.addEventListener("click",(()=>{"expand_more"==t.textContent?t.textContent="expand_less":t.textContent="expand_more",s.classList.toggle("visiblity"),d.classList.toggle("overflow"),d.classList.toggle("overflowHidden")})),r="inbox",de()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,