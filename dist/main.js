(()=>{"use strict";(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("nav");t.classList.add("nav");const s=document.createElement("div");s.classList.add("nav-inbox");const d=document.createElement("span");d.classList.add("menu"),d.classList.add("material-icons"),d.textContent="menu",s.appendChild(d);const a=document.createElement("span");a.classList.add("inbox"),a.classList.add("material-icons"),a.textContent="inbox",s.appendChild(a),t.appendChild(s);const n=document.createElement("div");n.classList.add("nav-done");const i=document.createElement("span");i.classList.add("addNav"),i.classList.add("material-icons"),i.textContent="add",n.appendChild(i);const l=document.createElement("span");l.classList.add("done"),l.classList.add("material-icons"),l.textContent="done",n.appendChild(l),t.appendChild(n),e.appendChild(t)})(),(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("div");t.classList.add("main"),t.classList.add("mainMain");const s=document.createElement("div");s.classList.add("projects-folder"),s.classList.add("folder");const d=document.createElement("div");d.classList.add("all");const a=document.createElement("p");a.classList.add("allClick");const n=document.createElement("span");n.classList.add("material-icons"),n.textContent="all_inbox",a.append(n,"all"),d.appendChild(a),s.appendChild(d);const i=document.createElement("div");i.classList.add("inbox");const l=document.createElement("p");l.classList.add("inboxClick");const c=document.createElement("span");c.classList.add("material-icons"),c.textContent="inbox",l.append(c,"inbox"),i.appendChild(l),s.appendChild(i);const o=document.createElement("div");o.classList.add("view-more");const r=document.createElement("p"),m=document.createElement("span");m.classList.add("material-icons"),m.textContent="folder_open",r.append(m,"projects"),o.appendChild(r);const p=document.createElement("p"),u=document.createElement("span");u.classList.add("more"),u.classList.add("material-icons"),u.textContent="expand_more",p.appendChild(u),o.appendChild(p),s.appendChild(o);const v=document.createElement("div");v.classList.add("visiblity"),v.classList.add("projects");const L=document.createElement("div");L.classList.add("root"),v.appendChild(L);const y=document.createElement("div");y.classList.add("addItem");const C=document.createElement("span");C.classList.add("material-icons"),C.textContent="add",y.appendChild(C);const h=document.createElement("p");h.textContent="new project",y.appendChild(h),v.appendChild(y),s.appendChild(v),t.appendChild(s);const g=document.createElement("div");g.classList.add("projects-content"),g.classList.add("content"),t.appendChild(g),e.appendChild(t)})(),(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("div");t.classList.add("bgTwo"),t.classList.add("visiblity");const s=document.createElement("div");s.classList.add("visiblity"),s.classList.add("addProject");const d=document.createElement("div"),a=document.createElement("h1");a.textContent="New project",d.appendChild(a);const n=document.createElement("span");n.classList.add("close"),n.classList.add("material-icons"),n.textContent="close",d.appendChild(n),s.appendChild(d);const i=document.createElement("form"),l=document.createElement("label");l.textContent="Project name:",i.appendChild(l);const c=document.createElement("input");c.classList.add("addProjectInput"),c.type="text",i.appendChild(c);const o=document.createElement("p");o.classList.add("visiblity"),o.classList.add("emptyInputProject"),o.classList.add("noValidOne"),o.textContent="no Valid Input",i.appendChild(o),s.appendChild(i);const r=document.createElement("div");r.classList.add("button-space");const m=document.createElement("button");m.classList.add("add"),m.textContent="add",r.appendChild(m),s.appendChild(r),t.appendChild(s),e.appendChild(t)})();const e=document.querySelector(".view-more"),t=document.querySelector(".more"),s=document.querySelector(".projects"),d=document.querySelector(".folder"),a=(document.querySelector(".menu"),document.querySelector(".mainMain")),n=document.querySelector(".bg"),i=document.querySelector(".bgTwo"),l=[],c=document.querySelector(".inbox"),o=[l,{name:"inbox",tasks:[]}];let r,m;window.localStorage.setItem("newArr",JSON.stringify(o));let p=document.querySelectorAll(".delete");document.querySelector(".allClick").addEventListener("click",(()=>{r="all",u()}));const u=()=>{let e;P.textContent="",se(r);for(let t=1;t<o.length;t++)for(let s=0;s<o[t].tasks.length;s++){"low"==o[t].tasks[s].priority?e="lightblue":"medium"==o[t].tasks[s].priority?e="orange":"high"==o[t].tasks[s].priority&&(e="red");const d=document.createElement("div");d.classList.add("manyProjects");const a=document.createElement("div");a.dataset.id=o[t].tasks[s].id,a.classList.add("tasks"),a.classList.add(e);const n=document.createElement("div");n.classList.add("name-and-priority");const i=document.createElement("div"),l=document.createElement("input");l.dataset.id=o[t].tasks[s].id,l.classList.add("checkbox"),l.type="checkbox",i.appendChild(l),n.appendChild(i);const c=document.createElement("div");c.textContent=o[t].tasks[s].name,c.classList.add("name"),n.appendChild(c),a.appendChild(n);const r=document.createElement("div");r.classList.add("delete");const m=document.createElement("button");m.classList.add("editButton"),m.textContent="edit",m.dataset.id=o[t].tasks[s].id,r.appendChild(m);const p=document.createElement("button");p.classList.add("viewMoreBtn"),p.textContent="view more",p.dataset.id=o[t].tasks[s].id,r.appendChild(p);const u=document.createElement("span");u.classList.add("material-icons"),u.classList.add("delete"),u.textContent="delete",u.dataset.id=o[t].tasks[s].id,document.createElement("div").classList.add("priority"),r.appendChild(u),a.appendChild(r),d.appendChild(a),P.appendChild(d)}},v=document.querySelector(".addItem"),L=document.querySelector(".addProject"),y=document.querySelector(".close"),C=document.querySelector(".add"),h=document.querySelector(".addProjectInput"),g=document.querySelector(".root");let b=document.querySelectorAll(".projectsNameInPage");const k=document.querySelector(".inboxClick"),E=document.querySelector(".nameTasks"),x=document.querySelector(".descriptiontasks"),S=document.querySelector(".dateTasks"),q=document.querySelector(".priorityTasksInput"),w=document.querySelector(".addNav"),f=document.querySelector(".addtasks"),j=document.querySelector(".closeTasksClick"),T=document.querySelector(".addTasksButton"),P=document.querySelector(".content"),I=document.querySelector(".noValidOne"),N=document.querySelector(".noValidTwo"),M=document.querySelector(".noValidThree"),B=document.querySelector(".noValidFour"),A=document.querySelector(".noValidFive");c.addEventListener("click",(()=>{r="inbox",de()})),j.addEventListener("click",(()=>{E.value="",x.value="",S.value="",q.value="",f.classList.toggle("visiblity"),n.classList.toggle("visiblity")})),w.addEventListener("click",(()=>{f.classList.toggle("visiblity"),n.classList.toggle("visiblity"),d.classList.remove("z-index-toggle"),O()}));const O=()=>{N.classList.add("visiblity"),E.style.border="1px solid black",M.classList.add("visiblity"),x.style.border="1px solid black",B.classList.add("visiblity"),S.style.border="1px solid black",A.classList.add("visiblity"),q.style.border="1px solid black"};T.addEventListener("click",(()=>{if(!(()=>{let e=0;return E.value?(N.classList.add("visiblity"),E.style.border="1px solid black"):(N.classList.remove("visiblity"),E.style.border="1px solid red",e++),x.value?(M.classList.add("visiblity"),x.style.border="1px solid black"):(M.classList.remove("visiblity"),x.style.border="1px solid red",e++),S.value?(B.classList.add("visiblity"),S.style.border="1px solid black"):(B.classList.remove("visiblity"),S.style.border="1px solid red",e++),q.value?(A.classList.add("visiblity"),q.style.border="1px solid black"):(A.classList.remove("visiblity"),q.style.border="1px solid red",e++),{count:e}})().count){if("complited"==r||"all"==r)r="inbox",o[1].tasks.push({name:E.value,decription:x.value,date:S.value,priority:q.value,id:Math.floor(1e5*Math.random())}),m=0;else if(r)for(let e=0;e<o.length;e++)o[e].name==r&&(o[e].tasks.push({name:E.value,decription:x.value,date:S.value,priority:q.value,id:Math.floor(1e5*Math.random())}),m=e);else r="inbox",o[1].tasks.push({name:E.value,decription:x.value,date:S.value,priority:q.value,id:Math.floor(1e5*Math.random())}),m=0;de(),window.localStorage.setItem("newArr",JSON.stringify(o)),console.log(o),console.log(r),p=document.querySelectorAll(".delete"),E.value="",x.value="",f.classList.toggle("visiblity"),n.classList.toggle("visiblity")}})),k.addEventListener("click",(()=>{r="inbox",de(),console.log(o)})),document.addEventListener("click",(e=>{if(e.target.classList.contains("projectsNameInPage")){for(let t=0;t<o.length;t++)o[t].name==e.target.textContent&&(r=o[t].name);de()}})),document.addEventListener("click",(e=>{e.target.classList.contains("menu")&&(d.classList.toggle("projects-folder"),d.classList.toggle("projects-folderClick"),P.classList.toggle("projects-content"),P.classList.toggle("projects-contentClick"),a.classList.toggle("mainMain"),a.classList.toggle("mainMainClick"))})),v.addEventListener("click",(()=>{L.classList.toggle("visiblity"),i.classList.toggle("visiblity"),d.classList.remove("z-index-toggle"),I.classList.add("visiblity"),h.style.border="1px solid black"})),y.addEventListener("click",(()=>{h.value="",i.classList.toggle("visiblity"),L.classList.add("visiblity")})),C.addEventListener("click",(()=>{if(!h.value)return I.classList.remove("visiblity"),void(h.style.border="1px solid red");o.push({name:h.value,tasks:[]}),r=h.value,h.value="",L.classList.add("visiblity"),i.classList.toggle("visiblity"),le(),de(),window.localStorage.setItem("newArr",JSON.stringify(o))})),document.addEventListener("click",(e=>{if(e.target.classList.contains("viewMoreBtn")){let t=e.target.dataset.id;for(let e=1;e<o.length;e++)for(let s=0;s<o[e].tasks.length;s++)o[e].tasks[s].id==t&&(ae=e,ne=s);ie()}}));const V=document.querySelector(".cancel"),J=document.querySelector(".deleteTasks"),$=document.querySelector(".bgFour");document.addEventListener("click",(e=>{e.target.classList.contains("delete")&&($.classList.remove("visiblity"),V.addEventListener("click",(()=>{$.classList.add("visiblity")})),J.addEventListener("click",(()=>{for(let t=1;t<o.length;t++)for(let s=0;s<o[t].tasks.length;s++)o[t].tasks[s].id==e.target.dataset.id&&(index=t,indexTwo=s);o[index].tasks.splice(indexTwo,1),"all"==r?u():de(),console.log(o),$.classList.add("visiblity"),window.localStorage.setItem("newArr",JSON.stringify(o))})))})),document.addEventListener("click",(e=>{let t,s;if(!e.target.classList.contains("checkbox"))return!1;if(e.target.checked){for(let d=1;d<o.length;d++)for(let a=0;a<o[d].tasks.length;a++)o[d].tasks[a].id==e.target.dataset.id&&(t=d,s=a);l.push(o[t].tasks[s]),o[t].tasks.splice(s,1),"all"==r?u():de(),window.localStorage.setItem("newArr",JSON.stringify(o))}})),document.addEventListener("click",(e=>{e.target.classList.contains("done")&&(console.log([...l]),r="complited",_(),window.localStorage.setItem("newArr",JSON.stringify(o)))})),document.addEventListener("click",(e=>{e.target.classList.contains("viewMoreBtnComplited")&&U(e.target.dataset.id)}));const U=e=>{let t;for(let s=0;s<l.length;s++)e==l[s].id&&(t=s);const s=document.createElement("div");s.classList.add("moreContent");const d=document.createElement("div");d.classList.add("material-icons"),d.classList.add("closeBtnMore"),d.textContent="close",s.appendChild(d);const a=document.createElement("div");a.classList.add("nameProject-and-description");const n=document.createElement("div");n.textContent=`name: ${l[t].name}`,n.classList.add("nameProject"),a.appendChild(n);const i=document.createElement("div");i.textContent=`description: ${l[t].decription}`,i.classList.add("descriptionProject"),a.appendChild(i),s.appendChild(a);const c=document.createElement("div");c.classList.add("date-and-priority");const o=document.createElement("div");o.textContent=`date: ${l[t].date}`,o.classList.add("dateProject"),c.appendChild(o);const r=document.createElement("div");r.textContent=`priority: ${l[t].priority}`,r.classList.add("priorityProject"),c.appendChild(r),s.appendChild(c);const m=document.createElement("div");m.classList.add("bgThree"),m.appendChild(s),document.body.appendChild(m)},_=()=>{let e;P.textContent="",se(r);for(let t=0;t<l.length;t++){"low"==l[t].priority?e="lightblue":"medium"==l[t].priority?e="orange":"high"==l[t].priority&&(e="red");const s=document.createElement("div");s.classList.add("manyProjects");const d=document.createElement("div");d.dataset.id=l[t].id,d.classList.add("tasks"),d.classList.add(e);const a=document.createElement("div");a.classList.add("name-and-priority");const n=document.createElement("div");a.appendChild(n);const i=document.createElement("div");i.textContent=l[t].name,i.classList.add("name"),a.appendChild(i),d.appendChild(a);const c=document.createElement("div");c.classList.add("delete");const o=document.createElement("button");o.classList.add("viewMoreBtnComplited"),o.textContent="view more",o.dataset.id=l[t].id,c.appendChild(o);const r=document.createElement("span");r.classList.add("material-icons"),r.textContent="delete",r.classList.add("complitedTasksDeleteButton"),r.dataset.id=l[t].id,c.appendChild(r),document.createElement("div").classList.add("priority"),d.appendChild(c),s.appendChild(d),P.appendChild(s)}},F=document.querySelector(".bgFive"),D=document.querySelector(".deleteTasksTwo"),z=document.querySelector(".cancelTwo");document.addEventListener("click",(e=>{e.target.classList.contains("complitedTasksDeleteButton")&&(F.classList.remove("visiblity"),z.addEventListener("click",(()=>{F.classList.add("visiblity")})),D.addEventListener("click",(()=>{for(let t=0;t<l.length;t++)l[t].id==e.target.dataset.id&&l.splice(t,1);_(),console.log(o),F.classList.add("visiblity"),window.localStorage.setItem("newArr",JSON.stringify(o))})))}));const H=document.querySelector(".bgSix"),G=document.querySelector(".closeTasksUpdate"),K=document.querySelector(".updateNameTasks"),Q=document.querySelector(".updateDescriptiontasks"),R=document.querySelector(".updateDateTasks"),W=document.querySelector(".updatePriorityTasksInput"),X=document.querySelector(".noValidUpdateOne"),Y=document.querySelector(".noValidUpdateTwo"),Z=document.querySelector(".noValidUpdateThree"),ee=document.querySelector(".noValidUpdateFour"),te=document.querySelector(".UpdateTasksButton");document.addEventListener("click",(e=>{let t=0,s=0;if(e.target.classList.contains("editButton")){for(let d=1;d<o.length;d++)for(let a=0;a<o[d].tasks.length;a++)o[d].tasks[a].id==e.target.dataset.id&&(t=d,s=a);K.value=o[t].tasks[s].name,Q.value=o[t].tasks[s].decription,R.value=o[t].tasks[s].date,W.value=o[t].tasks[s].priority,H.classList.remove("visiblity"),console.log(t,s),G.addEventListener("click",(()=>{K.value="",Q.value="",R.value="",W.value="",H.classList.add("visiblity")})),te.addEventListener("click",(()=>{if(!(()=>{let e=0;return K.value?(X.classList.add("visiblity"),K.style.border="1px solid black"):(X.classList.remove("visiblity"),K.style.border="1px solid red",e++),Q.value?(Y.classList.add("visiblity"),Q.style.border="1px solid black"):(Y.classList.remove("visiblity"),Q.style.border="1px solid red",e++),R.value?(Z.classList.add("visiblity"),R.style.border="1px solid black"):(Z.classList.remove("visiblity"),R.style.border="1px solid red",e++),W.value?(ee.classList.add("visiblity"),W.style.border="1px solid black"):(ee.classList.remove("visiblity"),W.style.border="1px solid red",e++),{countTest:e}})().countTest)try{const d={name:K.value,decription:Q.value,date:R.value,priority:W.value,id:e.target.dataset.id};o[t].tasks.splice(s,1,d),console.log(t,s),K.value="",Q.value="",R.value="",W.value="",t=0,s=0,H.classList.add("visiblity"),"all"==r?u():de(),console.log(o),window.localStorage.setItem("newArr",JSON.stringify(o))}catch(e){console.log(e)}}))}}));const se=e=>{const t=document.createElement("div");t.textContent=e,t.classList.add("nowPageName"),P.appendChild(t)},de=()=>{let e,t;P.textContent="",se(r);for(let t=0;t<o.length;t++)o[t].name==r&&(e=t);for(let s=0;s<o[e].tasks.length;s++){"low"==o[e].tasks[s].priority?t="lightblue":"medium"==o[e].tasks[s].priority?t="orange":"high"==o[e].tasks[s].priority&&(t="red");const d=document.createElement("div");d.classList.add("manyProjects");const a=document.createElement("div");a.dataset.id=o[e].tasks[s].id,a.classList.add("tasks"),a.classList.add(t);const n=document.createElement("div");n.classList.add("name-and-priority");const i=document.createElement("div"),l=document.createElement("input");l.dataset.id=o[e].tasks[s].id,l.classList.add("checkbox"),l.type="checkbox",i.appendChild(l),n.appendChild(i);const c=document.createElement("div");c.textContent=o[e].tasks[s].name,c.classList.add("name"),n.appendChild(c),a.appendChild(n);const r=document.createElement("div");r.classList.add("delete");const m=document.createElement("button");m.classList.add("editButton"),m.textContent="edit",m.dataset.id=o[e].tasks[s].id,r.appendChild(m);const p=document.createElement("button");p.classList.add("viewMoreBtn"),p.textContent="view more",p.dataset.id=o[e].tasks[s].id,r.appendChild(p);const u=document.createElement("span");u.classList.add("material-icons"),u.classList.add("delete"),u.textContent="delete",u.dataset.id=o[e].tasks[s].id,document.createElement("div").classList.add("priority"),r.appendChild(u),a.appendChild(r),d.appendChild(a),P.appendChild(d)}};let ae,ne;document.addEventListener("click",(e=>{e.target.classList.contains("closeBtnMore")&&([...document.getElementsByClassName("moreContent")].map((e=>e&&e.remove())),[...document.getElementsByClassName("bgThree")].map((e=>e&&e.remove())))}));const ie=()=>{const e=document.createElement("div");e.classList.add("moreContent");const t=document.createElement("div");t.classList.add("closeBtnMore"),t.classList.add("material-icons"),t.textContent="close",e.appendChild(t);const s=document.createElement("div");s.classList.add("nameProject-and-description");const d=document.createElement("div");d.textContent=`name: ${o[ae].tasks[ne].name}`,d.classList.add("nameProject"),s.appendChild(d);const a=document.createElement("div");a.textContent=`description: ${o[ae].tasks[ne].decription}`,a.classList.add("descriptionProject"),s.appendChild(a),e.appendChild(s);const n=document.createElement("div");n.classList.add("date-and-priority");const i=document.createElement("div");i.textContent=`date: ${o[ae].tasks[ne].date}`,i.classList.add("dateProject"),n.appendChild(i);const l=document.createElement("div");l.textContent=`priority: ${o[ae].tasks[ne].priority}`,l.classList.add("priorityProject"),n.appendChild(l),e.appendChild(n);const c=document.createElement("div");c.classList.add("bgThree"),c.appendChild(e),document.body.appendChild(c)},le=()=>{g.textContent="";for(let e=1;e<o.length;e++)if("inbox"==o[e].name);else{const t=document.createElement("p");t.classList.add("projectsNameInPage"),t.textContent=o[e].name,t.textContent&&g.appendChild(t)}b=document.querySelectorAll(".projectsNameInPage")};e.addEventListener("click",(()=>{"expand_more"==t.textContent?t.textContent="expand_less":t.textContent="expand_more",s.classList.toggle("visiblity"),d.classList.toggle("overflow"),d.classList.toggle("overflowHidden")})),r="inbox",de()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VUFBVWdHLE9BQU8sWUFDL0J0RCxFQUFjMUMsVUFBVWdHLE9BQU8scUJBR25DOUMsRUFBYSxRQUNiNEMsTSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC1hcHAvLi9zcmMvY29tcG9uZW50cy9uYXZCYXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QtYXBwLy4vc3JjL2NvbXBvbmVudHMvbWFpblBhZ2UuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0LWFwcC8uL3NyYy9jb21wb25lbnRzL25ld1Byb2plY3RQb3BVcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBuYXZCYXIgPSAoKSA9PiB7XHJcblxyXG4gICAgY29uc3Qgcm9vdEFwcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yb290QXBwJyk7XHJcblxyXG4gICAgY29uc3QgbmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbmF2Jyk7XHJcbiAgICBuYXYuY2xhc3NMaXN0LmFkZCgnbmF2Jyk7XHJcblxyXG4gICAgY29uc3QgbmF2SW5ib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIG5hdkluYm94LmNsYXNzTGlzdC5hZGQoJ25hdi1pbmJveCcpO1xyXG5cclxuICAgIGNvbnN0IG1lbnVNYXRlcmlhbEljb25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgbWVudU1hdGVyaWFsSWNvbnMuY2xhc3NMaXN0LmFkZCgnbWVudScpO1xyXG4gICAgbWVudU1hdGVyaWFsSWNvbnMuY2xhc3NMaXN0LmFkZCgnbWF0ZXJpYWwtaWNvbnMnKTtcclxuICAgIG1lbnVNYXRlcmlhbEljb25zLnRleHRDb250ZW50ID0gJ21lbnUnO1xyXG5cclxuICAgIG5hdkluYm94LmFwcGVuZENoaWxkKG1lbnVNYXRlcmlhbEljb25zKTtcclxuXHJcbiAgICBjb25zdCBpbmJveE1hdGVyaWFsSWNvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICBpbmJveE1hdGVyaWFsSWNvbnMuY2xhc3NMaXN0LmFkZCgnaW5ib3gnKTtcclxuICAgIGluYm94TWF0ZXJpYWxJY29ucy5jbGFzc0xpc3QuYWRkKCdtYXRlcmlhbC1pY29ucycpO1xyXG4gICAgaW5ib3hNYXRlcmlhbEljb25zLnRleHRDb250ZW50ID0gJ2luYm94JztcclxuXHJcbiAgICBuYXZJbmJveC5hcHBlbmRDaGlsZChpbmJveE1hdGVyaWFsSWNvbnMpO1xyXG5cclxuICAgIG5hdi5hcHBlbmRDaGlsZChuYXZJbmJveCk7XHJcblxyXG4gICAgY29uc3QgbmF2RG9uZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbmF2RG9uZS5jbGFzc0xpc3QuYWRkKCduYXYtZG9uZScpO1xyXG5cclxuICAgIGNvbnN0IGFkZE5hdk1hdGVyaWFsSWNvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICBhZGROYXZNYXRlcmlhbEljb25zLmNsYXNzTGlzdC5hZGQoJ2FkZE5hdicpO1xyXG4gICAgYWRkTmF2TWF0ZXJpYWxJY29ucy5jbGFzc0xpc3QuYWRkKCdtYXRlcmlhbC1pY29ucycpO1xyXG4gICAgYWRkTmF2TWF0ZXJpYWxJY29ucy50ZXh0Q29udGVudCA9ICdhZGQnO1xyXG5cclxuICAgIG5hdkRvbmUuYXBwZW5kQ2hpbGQoYWRkTmF2TWF0ZXJpYWxJY29ucyk7XHJcblxyXG4gICAgY29uc3QgbmF2RG9uZU1hdGVyaWFsSWNvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICBuYXZEb25lTWF0ZXJpYWxJY29ucy5jbGFzc0xpc3QuYWRkKCdkb25lJyk7XHJcbiAgICBuYXZEb25lTWF0ZXJpYWxJY29ucy5jbGFzc0xpc3QuYWRkKCdtYXRlcmlhbC1pY29ucycpO1xyXG4gICAgbmF2RG9uZU1hdGVyaWFsSWNvbnMudGV4dENvbnRlbnQgPSAnZG9uZSc7XHJcblxyXG4gICAgbmF2RG9uZS5hcHBlbmRDaGlsZChuYXZEb25lTWF0ZXJpYWxJY29ucyk7XHJcblxyXG4gICAgbmF2LmFwcGVuZENoaWxkKG5hdkRvbmUpO1xyXG5cclxuICAgIHJvb3RBcHAuYXBwZW5kQ2hpbGQobmF2KTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmF2QmFyOyIsImltcG9ydCBuYXZCYXIgZnJvbSBcIi4vY29tcG9uZW50cy9uYXZCYXJcIjtcclxuaW1wb3J0IG1haW5QYWdlIGZyb20gJy4vY29tcG9uZW50cy9tYWluUGFnZSc7XHJcbmltcG9ydCBuZXdQcm9qZWN0UG9wVXAgZnJvbSAnLi9jb21wb25lbnRzL25ld1Byb2plY3RQb3BVcCc7XHJcblxyXG5uYXZCYXIoKTtcclxubWFpblBhZ2UoKTtcclxubmV3UHJvamVjdFBvcFVwKCk7XHJcblxyXG5cclxuY29uc3Qgdmlld01vcmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudmlldy1tb3JlJyk7XHJcbmNvbnN0IG1vcmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9yZScpO1xyXG5jb25zdCBwcm9qZWN0c0RpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0cycpO1xyXG5jb25zdCBwcm9qZWN0Rm9sZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvbGRlcicpO1xyXG5jb25zdCBtZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1lbnUnKTtcclxuY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWluTWFpbicpO1xyXG5cclxuY29uc3QgYmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmcnKTtcclxuY29uc3QgYmdUd28gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmdUd28nKTtcclxuXHJcbmNvbnN0IGNvbXBsaXRlZFRhc2tzID0gW107XHJcblxyXG5jb25zdCBpbmJveE1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW5ib3gnKTtcclxuXHJcbmNvbnN0IG5ld0FyciA9IFtcclxuICAgIGNvbXBsaXRlZFRhc2tzLCBcclxueyBcclxuICAgIG5hbWU6ICdpbmJveCcsXHJcbiAgICB0YXNrczogW10sXHJcbn1dO1xyXG5cclxud2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCduZXdBcnInLCBKU09OLnN0cmluZ2lmeShuZXdBcnIpKTtcclxuXHJcbmxldCBub3dQcm9qZWN0O1xyXG5sZXQgY291bnQ7XHJcblxyXG5sZXQgZGVsZXRlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRlbGV0ZScpO1xyXG5cclxuY29uc3QgYWxsQ2xpY2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWxsQ2xpY2snKTtcclxuXHJcbmFsbENsaWNrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgbm93UHJvamVjdCA9ICdhbGwnO1xyXG4gICAgYWxsVGFza3MoKTtcclxufSlcclxuXHJcbmNvbnN0IGFsbFRhc2tzID0gKCkgPT4ge1xyXG4gICAgXHJcbiAgICBsZXQgYm9yZGVyQ29sb3JDbGFzcztcclxuICAgIHByb2plY3RzQ29udGVudC50ZXh0Q29udGVudCA9ICcnO1xyXG5cclxuICAgIG5vd1BhZ2VJblRhc2tzKG5vd1Byb2plY3QpO1xyXG5cclxuICAgIGZvcihsZXQgaSA9IDE7IGkgPCBuZXdBcnIubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgIGZvcihsZXQgaiA9IDA7IGogPCBuZXdBcnJbaV0udGFza3MubGVuZ3RoOyBqKyspe1xyXG5cclxuICAgICAgICAgICAgaWYobmV3QXJyW2ldLnRhc2tzW2pdLnByaW9yaXR5ID09ICdsb3cnKXtcclxuICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yQ2xhc3MgPSAnbGlnaHRibHVlJztcclxuICAgICAgICAgICAgfWVsc2UgaWYobmV3QXJyW2ldLnRhc2tzW2pdLnByaW9yaXR5ID09ICdtZWRpdW0nKXtcclxuICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yQ2xhc3MgPSAnb3JhbmdlJztcclxuICAgICAgICAgICAgfWVsc2UgaWYobmV3QXJyW2ldLnRhc2tzW2pdLnByaW9yaXR5ID09ICdoaWdoJyl7XHJcbiAgICAgICAgICAgICAgICBib3JkZXJDb2xvckNsYXNzID0gJ3JlZCc7XHJcbiAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICAgICBjb25zdCBtYW55UHJvamVjdHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgbWFueVByb2plY3RzLmNsYXNzTGlzdC5hZGQoJ21hbnlQcm9qZWN0cycpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGNvbnN0IGRpdlRhc2tzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgIGRpdlRhc2tzLmRhdGFzZXQuaWQgPSBuZXdBcnJbaV0udGFza3Nbal0uaWQ7XHJcbiAgICAgICAgICAgIGRpdlRhc2tzLmNsYXNzTGlzdC5hZGQoJ3Rhc2tzJyk7XHJcbiAgICAgICAgICAgIGRpdlRhc2tzLmNsYXNzTGlzdC5hZGQoYm9yZGVyQ29sb3JDbGFzcyk7XHJcbiAgICBcclxuICAgICAgICAgICAgY29uc3QgbmFtZUFuZFByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgIG5hbWVBbmRQcmlvcml0eS5jbGFzc0xpc3QuYWRkKCduYW1lLWFuZC1wcmlvcml0eScpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGNvbnN0IGNoZWNrYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tib3hJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XHJcbiAgICAgICAgICAgIGNoZWNrYm94SW5wdXQuZGF0YXNldC5pZCA9IG5ld0FycltpXS50YXNrc1tqXS5pZDtcclxuICAgICAgICAgICAgY2hlY2tib3hJbnB1dC5jbGFzc0xpc3QuYWRkKCdjaGVja2JveCcpO1xyXG4gICAgICAgICAgICBjaGVja2JveElucHV0LnR5cGUgPSAnY2hlY2tib3gnO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGNoZWNrYm94LmFwcGVuZENoaWxkKGNoZWNrYm94SW5wdXQpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIG5hbWVBbmRQcmlvcml0eS5hcHBlbmRDaGlsZChjaGVja2JveCk7XHJcbiAgICBcclxuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgICBuYW1lLnRleHRDb250ZW50ID0gbmV3QXJyW2ldLnRhc2tzW2pdLm5hbWU7XHJcbiAgICAgICAgICAgIG5hbWUuY2xhc3NMaXN0LmFkZCgnbmFtZScpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIG5hbWVBbmRQcmlvcml0eS5hcHBlbmRDaGlsZChuYW1lKTtcclxuICAgIFxyXG4gICAgICAgICAgICBkaXZUYXNrcy5hcHBlbmRDaGlsZChuYW1lQW5kUHJpb3JpdHkpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGNvbnN0IGRlbGV0ZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgICBkZWxldGVEaXYuY2xhc3NMaXN0LmFkZCgnZGVsZXRlJyk7XHJcbiAgICBcclxuICAgICAgICAgICAgY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgICAgICAgICBlZGl0QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2VkaXRCdXR0b24nKTtcclxuICAgICAgICAgICAgZWRpdEJ1dHRvbi50ZXh0Q29udGVudCA9ICdlZGl0JztcclxuICAgICAgICAgICAgZWRpdEJ1dHRvbi5kYXRhc2V0LmlkID0gbmV3QXJyW2ldLnRhc2tzW2pdLmlkO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGRlbGV0ZURpdi5hcHBlbmRDaGlsZChlZGl0QnV0dG9uKVxyXG4gICAgXHJcbiAgICAgICAgICAgIGNvbnN0IHZpZXdNb3JlQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICAgICAgICAgIHZpZXdNb3JlQnRuLmNsYXNzTGlzdC5hZGQoJ3ZpZXdNb3JlQnRuJyk7XHJcbiAgICAgICAgICAgIHZpZXdNb3JlQnRuLnRleHRDb250ZW50ID0gJ3ZpZXcgbW9yZSc7XHJcbiAgICAgICAgICAgIHZpZXdNb3JlQnRuLmRhdGFzZXQuaWQgPSBuZXdBcnJbaV0udGFza3Nbal0uaWQ7XHJcbiAgICBcclxuICAgICAgICAgICAgZGVsZXRlRGl2LmFwcGVuZENoaWxkKHZpZXdNb3JlQnRuKTtcclxuICAgIFxyXG4gICAgICAgICAgICBjb25zdCBtYXRlcmlhbEljb25zRGVsZXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgICAgICAgICBtYXRlcmlhbEljb25zRGVsZXRlLmNsYXNzTGlzdC5hZGQoJ21hdGVyaWFsLWljb25zJyk7XHJcbiAgICAgICAgICAgIG1hdGVyaWFsSWNvbnNEZWxldGUuY2xhc3NMaXN0LmFkZCgnZGVsZXRlJyk7XHJcbiAgICAgICAgICAgIG1hdGVyaWFsSWNvbnNEZWxldGUudGV4dENvbnRlbnQgPSAnZGVsZXRlJztcclxuICAgICAgICAgICAgbWF0ZXJpYWxJY29uc0RlbGV0ZS5kYXRhc2V0LmlkID0gbmV3QXJyW2ldLnRhc2tzW2pdLmlkO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGNvbnN0IHByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgIHByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ3ByaW9yaXR5Jyk7XHJcbiAgICBcclxuICAgICAgICAgICAgZGVsZXRlRGl2LmFwcGVuZENoaWxkKG1hdGVyaWFsSWNvbnNEZWxldGUpO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICBkaXZUYXNrcy5hcHBlbmRDaGlsZChkZWxldGVEaXYpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIG1hbnlQcm9qZWN0cy5hcHBlbmRDaGlsZChkaXZUYXNrcyk7XHJcbiAgICBcclxuICAgICAgICAgICAgcHJvamVjdHNDb250ZW50LmFwcGVuZENoaWxkKG1hbnlQcm9qZWN0cyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCBhZGRJdGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZEl0ZW0nKTtcclxuY29uc3QgYWRkUHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRQcm9qZWN0Jyk7XHJcblxyXG5jb25zdCBjbG9zZU5ld1Byb2plY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2xvc2UnKTtcclxuY29uc3QgYWRkTmV3UHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQnKTtcclxuXHJcbmNvbnN0IGFkZFByb2plY3RJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRQcm9qZWN0SW5wdXQnKTtcclxuXHJcbmNvbnN0IHJvb3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucm9vdCcpO1xyXG5sZXQgcHJvamVjdHNOYW1lSW5QYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnByb2plY3RzTmFtZUluUGFnZScpO1xyXG5cclxuY29uc3QgaW5ib3hDbGljayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbmJveENsaWNrJyk7XHJcblxyXG5jb25zdCBuYW1lVGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmFtZVRhc2tzJyk7XHJcbmNvbnN0IGRlc2NyaXB0aW9udGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGVzY3JpcHRpb250YXNrcycpO1xyXG5jb25zdCBkYXRlVGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGF0ZVRhc2tzJyk7XHJcbmNvbnN0IHByaW9yaXR5VGFza3NJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcmlvcml0eVRhc2tzSW5wdXQnKTtcclxuXHJcbmNvbnN0IGFkZE5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGROYXYnKTtcclxuY29uc3QgYWRkdGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkdGFza3MnKTtcclxuY29uc3QgY2xvc2VUYXNrc0NsaWNrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNsb3NlVGFza3NDbGljaycpO1xyXG5jb25zdCBhZGRUYXNrc0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGRUYXNrc0J1dHRvbicpO1xyXG5cclxuY29uc3QgcHJvamVjdHNDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKTtcclxuXHJcbmNvbnN0IG5vVmFsaWRPbmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubm9WYWxpZE9uZScpO1xyXG5jb25zdCBub1ZhbGlkVHdvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5vVmFsaWRUd28nKTtcclxuY29uc3Qgbm9WYWxpZFRocmVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5vVmFsaWRUaHJlZScpO1xyXG5jb25zdCBub1ZhbGlkRm91ciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ub1ZhbGlkRm91cicpO1xyXG5jb25zdCBub1ZhbGlkRml2ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ub1ZhbGlkRml2ZScpO1xyXG5cclxuaW5ib3hNYWluLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgbm93UHJvamVjdCA9ICdpbmJveCc7XHJcbiAgICBjcmVhdGVEaXYoKTtcclxufSlcclxuXHJcbmNsb3NlVGFza3NDbGljay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIG5hbWVUYXNrcy52YWx1ZSA9ICcnO1xyXG4gICAgZGVzY3JpcHRpb250YXNrcy52YWx1ZSA9ICcnO1xyXG4gICAgZGF0ZVRhc2tzLnZhbHVlID0gJyc7XHJcbiAgICBwcmlvcml0eVRhc2tzSW5wdXQudmFsdWUgPSAnJztcclxuICAgIGFkZHRhc2tzLmNsYXNzTGlzdC50b2dnbGUoJ3Zpc2libGl0eScpO1xyXG4gICAgYmcuY2xhc3NMaXN0LnRvZ2dsZSgndmlzaWJsaXR5Jyk7XHJcbn0pXHJcblxyXG5hZGROYXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICBhZGR0YXNrcy5jbGFzc0xpc3QudG9nZ2xlKCd2aXNpYmxpdHknKTtcclxuICAgIGJnLmNsYXNzTGlzdC50b2dnbGUoJ3Zpc2libGl0eScpO1xyXG4gICAgcHJvamVjdEZvbGRlci5jbGFzc0xpc3QucmVtb3ZlKCd6LWluZGV4LXRvZ2dsZScpO1xyXG4gICAgc3RhbmRhcmRJbnB1dHMoKTtcclxufSlcclxuXHJcbmNvbnN0IHN0YW5kYXJkSW5wdXRzID0gKCkgPT4ge1xyXG4gICAgbm9WYWxpZFR3by5jbGFzc0xpc3QuYWRkKCd2aXNpYmxpdHknKTtcclxuICAgIG5hbWVUYXNrcy5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkIGJsYWNrJztcclxuXHJcbiAgICBub1ZhbGlkVGhyZWUuY2xhc3NMaXN0LmFkZCgndmlzaWJsaXR5Jyk7XHJcbiAgICBkZXNjcmlwdGlvbnRhc2tzLnN0eWxlLmJvcmRlciA9ICcxcHggc29saWQgYmxhY2snO1xyXG5cclxuICAgIG5vVmFsaWRGb3VyLmNsYXNzTGlzdC5hZGQoJ3Zpc2libGl0eScpO1xyXG4gICAgZGF0ZVRhc2tzLnN0eWxlLmJvcmRlciA9ICcxcHggc29saWQgYmxhY2snO1xyXG5cclxuICAgIG5vVmFsaWRGaXZlLmNsYXNzTGlzdC5hZGQoJ3Zpc2libGl0eScpO1xyXG4gICAgcHJpb3JpdHlUYXNrc0lucHV0LnN0eWxlLmJvcmRlciA9ICcxcHggc29saWQgYmxhY2snO1xyXG59XHJcblxyXG5jb25zdCBpc1ZhbGlkID0gKCkgPT4ge1xyXG4gICAgbGV0IGNvdW50ID0gMDtcclxuXHJcbiAgICBpZighbmFtZVRhc2tzLnZhbHVlKXtcclxuICAgICAgICBub1ZhbGlkVHdvLmNsYXNzTGlzdC5yZW1vdmUoJ3Zpc2libGl0eScpO1xyXG4gICAgICAgIG5hbWVUYXNrcy5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkIHJlZCc7XHJcbiAgICAgICAgY291bnQrKztcclxuICAgIH1lbHNle1xyXG4gICAgICAgIG5vVmFsaWRUd28uY2xhc3NMaXN0LmFkZCgndmlzaWJsaXR5Jyk7XHJcbiAgICAgICAgbmFtZVRhc2tzLnN0eWxlLmJvcmRlciA9ICcxcHggc29saWQgYmxhY2snO1xyXG4gICAgfVxyXG4gICAgaWYoIWRlc2NyaXB0aW9udGFza3MudmFsdWUpe1xyXG4gICAgICAgIG5vVmFsaWRUaHJlZS5jbGFzc0xpc3QucmVtb3ZlKCd2aXNpYmxpdHknKTtcclxuICAgICAgICBkZXNjcmlwdGlvbnRhc2tzLnN0eWxlLmJvcmRlciA9ICcxcHggc29saWQgcmVkJztcclxuICAgICAgICBjb3VudCsrO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgbm9WYWxpZFRocmVlLmNsYXNzTGlzdC5hZGQoJ3Zpc2libGl0eScpO1xyXG4gICAgICAgIGRlc2NyaXB0aW9udGFza3Muc3R5bGUuYm9yZGVyID0gJzFweCBzb2xpZCBibGFjayc7XHJcbiAgICB9XHJcbiAgICBpZighZGF0ZVRhc2tzLnZhbHVlKXtcclxuICAgICAgICBub1ZhbGlkRm91ci5jbGFzc0xpc3QucmVtb3ZlKCd2aXNpYmxpdHknKTtcclxuICAgICAgICBkYXRlVGFza3Muc3R5bGUuYm9yZGVyID0gJzFweCBzb2xpZCByZWQnO1xyXG4gICAgICAgIGNvdW50Kys7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBub1ZhbGlkRm91ci5jbGFzc0xpc3QuYWRkKCd2aXNpYmxpdHknKTtcclxuICAgICAgICBkYXRlVGFza3Muc3R5bGUuYm9yZGVyID0gJzFweCBzb2xpZCBibGFjayc7XHJcbiAgICB9XHJcbiAgICBpZighcHJpb3JpdHlUYXNrc0lucHV0LnZhbHVlKXtcclxuICAgICAgICBub1ZhbGlkRml2ZS5jbGFzc0xpc3QucmVtb3ZlKCd2aXNpYmxpdHknKTtcclxuICAgICAgICBwcmlvcml0eVRhc2tzSW5wdXQuc3R5bGUuYm9yZGVyID0gJzFweCBzb2xpZCByZWQnO1xyXG4gICAgICAgIGNvdW50Kys7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBub1ZhbGlkRml2ZS5jbGFzc0xpc3QuYWRkKCd2aXNpYmxpdHknKTtcclxuICAgICAgICBwcmlvcml0eVRhc2tzSW5wdXQuc3R5bGUuYm9yZGVyID0gJzFweCBzb2xpZCBibGFjayc7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJue1xyXG4gICAgICAgIGNvdW50LFxyXG4gICAgfVxyXG59XHJcblxyXG5hZGRUYXNrc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuXHJcbiAgICBpZihpc1ZhbGlkKCkuY291bnQpe1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBpZihub3dQcm9qZWN0ID09ICdjb21wbGl0ZWQnIHx8IG5vd1Byb2plY3QgPT0gJ2FsbCcpe1xyXG4gICAgICAgIG5vd1Byb2plY3QgPSAnaW5ib3gnO1xyXG4gICAgICAgIG5ld0FyclsxXS50YXNrcy5wdXNoKHtcclxuICAgICAgICAgICAgbmFtZTogbmFtZVRhc2tzLnZhbHVlLFxyXG4gICAgICAgICAgICBkZWNyaXB0aW9uOiBkZXNjcmlwdGlvbnRhc2tzLnZhbHVlLFxyXG4gICAgICAgICAgICBkYXRlOiBkYXRlVGFza3MudmFsdWUsXHJcbiAgICAgICAgICAgIHByaW9yaXR5OiBwcmlvcml0eVRhc2tzSW5wdXQudmFsdWUsXHJcbiAgICAgICAgICAgIGlkOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMDApLFxyXG4gICAgICAgIH0pXHJcblxyXG4gICAgICAgIGNvdW50ID0gMDtcclxuICAgIH1lbHNle1xyXG4gICAgICAgIGlmKG5vd1Byb2plY3Qpe1xyXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgbmV3QXJyLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGlmKG5ld0FycltpXS5uYW1lID09IG5vd1Byb2plY3Qpe1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld0FycltpXS50YXNrcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogbmFtZVRhc2tzLnZhbHVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWNyaXB0aW9uOiBkZXNjcmlwdGlvbnRhc2tzLnZhbHVlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRlOiBkYXRlVGFza3MudmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHByaW9yaXR5OiBwcmlvcml0eVRhc2tzSW5wdXQudmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMDApLFxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgY291bnQgPSBpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIG5vd1Byb2plY3QgPSAnaW5ib3gnO1xyXG4gICAgICAgICAgICBuZXdBcnJbMV0udGFza3MucHVzaCh7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBuYW1lVGFza3MudmFsdWUsXHJcbiAgICAgICAgICAgICAgICBkZWNyaXB0aW9uOiBkZXNjcmlwdGlvbnRhc2tzLnZhbHVlLFxyXG4gICAgICAgICAgICAgICAgZGF0ZTogZGF0ZVRhc2tzLnZhbHVlLFxyXG4gICAgICAgICAgICAgICAgcHJpb3JpdHk6IHByaW9yaXR5VGFza3NJbnB1dC52YWx1ZSxcclxuICAgICAgICAgICAgICAgIGlkOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMDApLFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgXHJcbiAgICAgICAgICAgIGNvdW50ID0gMDtcclxuICAgICAgICB9IFxyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZURpdigpO1xyXG5cclxuICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbmV3QXJyJywgSlNPTi5zdHJpbmdpZnkobmV3QXJyKSk7XHJcblxyXG4gICAgY29uc29sZS5sb2cobmV3QXJyKTtcclxuICAgIGNvbnNvbGUubG9nKG5vd1Byb2plY3QpO1xyXG5cclxuICAgIGRlbGV0ZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kZWxldGUnKTtcclxuXHJcbiAgICBuYW1lVGFza3MudmFsdWUgPSAnJztcclxuICAgIGRlc2NyaXB0aW9udGFza3MudmFsdWUgPSAnJztcclxuXHJcbiAgICBhZGR0YXNrcy5jbGFzc0xpc3QudG9nZ2xlKCd2aXNpYmxpdHknKTtcclxuICAgIGJnLmNsYXNzTGlzdC50b2dnbGUoJ3Zpc2libGl0eScpO1xyXG59KVxyXG5cclxuaW5ib3hDbGljay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIG5vd1Byb2plY3QgPSAnaW5ib3gnO1xyXG4gICAgY3JlYXRlRGl2KCk7XHJcbiAgICBjb25zb2xlLmxvZyhuZXdBcnIpO1xyXG59KVxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgaWYoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwcm9qZWN0c05hbWVJblBhZ2UnKSl7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IG5ld0Fyci5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIGlmKG5ld0FycltpXS5uYW1lID09IGUudGFyZ2V0LnRleHRDb250ZW50KXtcclxuICAgICAgICAgICAgICAgIG5vd1Byb2plY3QgPSBuZXdBcnJbaV0ubmFtZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1lbHNle1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjcmVhdGVEaXYoKTtcclxufSlcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgIGlmKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbWVudScpKXtcclxuICAgICAgICBwcm9qZWN0Rm9sZGVyLmNsYXNzTGlzdC50b2dnbGUoJ3Byb2plY3RzLWZvbGRlcicpO1xyXG4gICAgICAgIHByb2plY3RGb2xkZXIuY2xhc3NMaXN0LnRvZ2dsZSgncHJvamVjdHMtZm9sZGVyQ2xpY2snKTtcclxuICAgICAgICBwcm9qZWN0c0NvbnRlbnQuY2xhc3NMaXN0LnRvZ2dsZSgncHJvamVjdHMtY29udGVudCcpO1xyXG4gICAgICAgIHByb2plY3RzQ29udGVudC5jbGFzc0xpc3QudG9nZ2xlKCdwcm9qZWN0cy1jb250ZW50Q2xpY2snKTtcclxuICAgICAgICBtYWluLmNsYXNzTGlzdC50b2dnbGUoJ21haW5NYWluJyk7XHJcbiAgICAgICAgbWFpbi5jbGFzc0xpc3QudG9nZ2xlKCdtYWluTWFpbkNsaWNrJyk7XHJcbiAgICB9XHJcbn0pXHJcblxyXG5hZGRJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgYWRkUHJvamVjdC5jbGFzc0xpc3QudG9nZ2xlKCd2aXNpYmxpdHknKTtcclxuICAgIGJnVHdvLmNsYXNzTGlzdC50b2dnbGUoJ3Zpc2libGl0eScpO1xyXG4gICAgcHJvamVjdEZvbGRlci5jbGFzc0xpc3QucmVtb3ZlKCd6LWluZGV4LXRvZ2dsZScpO1xyXG4gICAgbm9WYWxpZE9uZS5jbGFzc0xpc3QuYWRkKCd2aXNpYmxpdHknKTtcclxuICAgIGFkZFByb2plY3RJbnB1dC5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkIGJsYWNrJztcclxufSlcclxuXHJcbmNsb3NlTmV3UHJvamVjdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGFkZFByb2plY3RJbnB1dC52YWx1ZSA9ICcnO1xyXG4gICAgYmdUd28uY2xhc3NMaXN0LnRvZ2dsZSgndmlzaWJsaXR5Jyk7XHJcbiAgICBhZGRQcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ3Zpc2libGl0eScpO1xyXG59KVxyXG5cclxuYWRkTmV3UHJvamVjdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuXHJcbiAgICBpZighYWRkUHJvamVjdElucHV0LnZhbHVlKXtcclxuICAgICAgICBub1ZhbGlkT25lLmNsYXNzTGlzdC5yZW1vdmUoJ3Zpc2libGl0eScpO1xyXG4gICAgICAgIGFkZFByb2plY3RJbnB1dC5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkIHJlZCc7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIG5ld0Fyci5wdXNoKHtcclxuICAgICAgICBuYW1lOiBhZGRQcm9qZWN0SW5wdXQudmFsdWUsXHJcbiAgICAgICAgdGFza3M6IFtdLFxyXG4gICAgfSlcclxuICAgIG5vd1Byb2plY3QgPSBhZGRQcm9qZWN0SW5wdXQudmFsdWU7XHJcbiAgICBhZGRQcm9qZWN0SW5wdXQudmFsdWUgPSAnJztcclxuICAgIGFkZFByb2plY3QuY2xhc3NMaXN0LmFkZCgndmlzaWJsaXR5Jyk7XHJcbiAgICBiZ1R3by5jbGFzc0xpc3QudG9nZ2xlKCd2aXNpYmxpdHknKTtcclxuICAgIGFkZFRvUGFnZU5hbWVQcm9qZWN0KCk7XHJcbiAgICBjcmVhdGVEaXYoKTtcclxuICAgIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbmV3QXJyJywgSlNPTi5zdHJpbmdpZnkobmV3QXJyKSk7XHJcbn0pXHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICBpZihlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3ZpZXdNb3JlQnRuJykpe1xyXG4gICAgICAgIGxldCBpbmRleE1haW4gPSBlLnRhcmdldC5kYXRhc2V0LmlkO1xyXG5cclxuICAgICAgICBmb3IobGV0IGkgPSAxOyBpIDwgbmV3QXJyLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgZm9yKGxldCBqID0gMDsgaiA8IG5ld0FycltpXS50YXNrcy5sZW5ndGg7IGorKyl7XHJcbiAgICAgICAgICAgICAgICBpZihuZXdBcnJbaV0udGFza3Nbal0uaWQgPT0gaW5kZXhNYWluKXtcclxuICAgICAgICAgICAgICAgICAgICBpbmRleE1haW5PbmUgPSBpXHJcbiAgICAgICAgICAgICAgICAgICAgaW5kZXhNYWluVHdvID0gajtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgYWRkRGl2KCk7XHJcbiAgICB9XHJcbn0pXHJcblxyXG5jb25zdCBidXR0b25DYW5jZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FuY2VsJyk7XHJcbmNvbnN0IGJ1dHRvbkRlbGV0ZVRhc2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRlbGV0ZVRhc2tzJyk7XHJcbmNvbnN0IHBvcFVwRGVsZXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJnRm91cicpO1xyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgaWYoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdkZWxldGUnKSl7XHJcbiAgICAgICAgcG9wVXBEZWxldGUuY2xhc3NMaXN0LnJlbW92ZSgndmlzaWJsaXR5Jyk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYnV0dG9uQ2FuY2VsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBwb3BVcERlbGV0ZS5jbGFzc0xpc3QuYWRkKCd2aXNpYmxpdHknKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIGJ1dHRvbkRlbGV0ZVRhc2tzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBmb3IobGV0IGkgPSAxOyBpIDwgbmV3QXJyLmxlbmd0aDsgaSsrKXtcclxuICAgICAgICAgICAgICAgIGZvcihsZXQgaiA9IDA7IGogPCBuZXdBcnJbaV0udGFza3MubGVuZ3RoOyBqKyspe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKG5ld0FycltpXS50YXNrc1tqXS5pZCA9PSBlLnRhcmdldC5kYXRhc2V0LmlkKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4VHdvID0gajtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIG5ld0FycltpbmRleF0udGFza3Muc3BsaWNlKGluZGV4VHdvLCAxKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKG5vd1Byb2plY3QgPT0gJ2FsbCcpe1xyXG4gICAgICAgICAgICAgICAgYWxsVGFza3MoKTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBjcmVhdGVEaXYoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgY29uc29sZS5sb2cobmV3QXJyKTtcclxuICAgICAgICAgICAgcG9wVXBEZWxldGUuY2xhc3NMaXN0LmFkZCgndmlzaWJsaXR5Jyk7XHJcblxyXG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ25ld0FycicsIEpTT04uc3RyaW5naWZ5KG5ld0FycikpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0pXHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICBsZXQgaW5kZXg7XHJcbiAgICBsZXQgaW5kZXhUd287XHJcblxyXG4gICAgaWYoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjaGVja2JveCcpKXtcclxuICAgICAgICBpZihlLnRhcmdldC5jaGVja2VkKXtcclxuICAgICAgICAgICAgZm9yKGxldCBpID0gMTsgaSA8IG5ld0Fyci5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICBmb3IobGV0IGogPSAwOyBqIDwgbmV3QXJyW2ldLnRhc2tzLmxlbmd0aDsgaisrKXtcclxuICAgICAgICAgICAgICAgICAgICBpZihuZXdBcnJbaV0udGFza3Nbal0uaWQgPT0gZS50YXJnZXQuZGF0YXNldC5pZCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gaVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmRleFR3byA9IGo7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBjb21wbGl0ZWRUYXNrcy5wdXNoKG5ld0FycltpbmRleF0udGFza3NbaW5kZXhUd29dKTtcclxuXHJcbiAgICAgICAgICAgIG5ld0FycltpbmRleF0udGFza3Muc3BsaWNlKGluZGV4VHdvLCAxKTtcclxuXHJcbiAgICAgICAgICAgIGlmKG5vd1Byb2plY3QgPT0gJ2FsbCcpe1xyXG4gICAgICAgICAgICAgICAgYWxsVGFza3MoKTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBjcmVhdGVEaXYoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCduZXdBcnInLCBKU09OLnN0cmluZ2lmeShuZXdBcnIpKTtcclxuICAgICAgICB9XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbn0pXHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICBpZihlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2RvbmUnKSl7XHJcbiAgICAgICAgY29uc29sZS5sb2coWy4uLmNvbXBsaXRlZFRhc2tzXSk7XHJcbiAgICAgICAgbm93UHJvamVjdCA9ICdjb21wbGl0ZWQnO1xyXG4gICAgICAgIGNvbXBsaXRlZERpdigpO1xyXG5cclxuICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ25ld0FycicsIEpTT04uc3RyaW5naWZ5KG5ld0FycikpO1xyXG4gICAgfVxyXG59KVxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgaWYoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCd2aWV3TW9yZUJ0bkNvbXBsaXRlZCcpKXtcclxuICAgICAgICBjb21wbGl0ZWRWaWV3TW9yZShlLnRhcmdldC5kYXRhc2V0LmlkKTtcclxuICAgIH1cclxufSlcclxuXHJcbmNvbnN0IGNvbXBsaXRlZFZpZXdNb3JlID0gKHRlc3QpID0+IHtcclxuICAgIGxldCBpbmRleDtcclxuXHJcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgY29tcGxpdGVkVGFza3MubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgIGlmKHRlc3QgPT0gY29tcGxpdGVkVGFza3NbaV0uaWQpe1xyXG4gICAgICAgICAgICBpbmRleCA9IGk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCBtb3JlQ29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbW9yZUNvbnRlbnQuY2xhc3NMaXN0LmFkZCgnbW9yZUNvbnRlbnQnKTtcclxuXHJcbiAgICBjb25zdCBjbG9zZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgY2xvc2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnbWF0ZXJpYWwtaWNvbnMnKTtcclxuICAgIGNsb3NlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2Nsb3NlQnRuTW9yZScpO1xyXG4gICAgY2xvc2VCdXR0b24udGV4dENvbnRlbnQgPSAnY2xvc2UnO1xyXG5cclxuICAgIG1vcmVDb250ZW50LmFwcGVuZENoaWxkKGNsb3NlQnV0dG9uKTtcclxuXHJcbiAgICBjb25zdCBuYW1lUHJvamVjdEFuZERlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBuYW1lUHJvamVjdEFuZERlc2NyaXB0aW9uLmNsYXNzTGlzdC5hZGQoJ25hbWVQcm9qZWN0LWFuZC1kZXNjcmlwdGlvbicpO1xyXG5cclxuICAgIGNvbnN0IG5hbWVQcm9qZWN0VHdvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBuYW1lUHJvamVjdFR3by50ZXh0Q29udGVudCA9IGBuYW1lOiAke2NvbXBsaXRlZFRhc2tzW2luZGV4XS5uYW1lfWA7XHJcbiAgICBuYW1lUHJvamVjdFR3by5jbGFzc0xpc3QuYWRkKCduYW1lUHJvamVjdCcpO1xyXG5cclxuICAgIG5hbWVQcm9qZWN0QW5kRGVzY3JpcHRpb24uYXBwZW5kQ2hpbGQobmFtZVByb2plY3RUd28pO1xyXG5cclxuICAgIGNvbnN0IGRlc2NyaXB0aW9uVHdvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBkZXNjcmlwdGlvblR3by50ZXh0Q29udGVudCA9IGBkZXNjcmlwdGlvbjogJHtjb21wbGl0ZWRUYXNrc1tpbmRleF0uZGVjcmlwdGlvbn1gO1xyXG4gICAgZGVzY3JpcHRpb25Ud28uY2xhc3NMaXN0LmFkZCgnZGVzY3JpcHRpb25Qcm9qZWN0Jyk7XHJcblxyXG4gICAgbmFtZVByb2plY3RBbmREZXNjcmlwdGlvbi5hcHBlbmRDaGlsZChkZXNjcmlwdGlvblR3byk7XHJcblxyXG4gICAgbW9yZUNvbnRlbnQuYXBwZW5kQ2hpbGQobmFtZVByb2plY3RBbmREZXNjcmlwdGlvbik7XHJcblxyXG4gICAgY29uc3QgZGF0ZUFuZFByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBkYXRlQW5kUHJpb3JpdHkuY2xhc3NMaXN0LmFkZCgnZGF0ZS1hbmQtcHJpb3JpdHknKTtcclxuXHJcbiAgICBjb25zdCBkYXRlUHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZGF0ZVByb2plY3QudGV4dENvbnRlbnQgPSBgZGF0ZTogJHtjb21wbGl0ZWRUYXNrc1tpbmRleF0uZGF0ZX1gO1xyXG4gICAgZGF0ZVByb2plY3QuY2xhc3NMaXN0LmFkZCgnZGF0ZVByb2plY3QnKTtcclxuXHJcbiAgICBkYXRlQW5kUHJpb3JpdHkuYXBwZW5kQ2hpbGQoZGF0ZVByb2plY3QpO1xyXG5cclxuICAgIGNvbnN0IHByaW9yaXR5UHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgcHJpb3JpdHlQcm9qZWN0LnRleHRDb250ZW50ID0gYHByaW9yaXR5OiAke2NvbXBsaXRlZFRhc2tzW2luZGV4XS5wcmlvcml0eX1gO1xyXG4gICAgcHJpb3JpdHlQcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ3ByaW9yaXR5UHJvamVjdCcpO1xyXG5cclxuICAgIGRhdGVBbmRQcmlvcml0eS5hcHBlbmRDaGlsZChwcmlvcml0eVByb2plY3QpO1xyXG5cclxuICAgIG1vcmVDb250ZW50LmFwcGVuZENoaWxkKGRhdGVBbmRQcmlvcml0eSk7XHJcblxyXG4gICAgY29uc3QgYmdUaHJlZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgYmdUaHJlZS5jbGFzc0xpc3QuYWRkKCdiZ1RocmVlJyk7XHJcblxyXG4gICAgYmdUaHJlZS5hcHBlbmRDaGlsZChtb3JlQ29udGVudClcclxuXHJcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGJnVGhyZWUpO1xyXG59XHJcblxyXG5jb25zdCBjb21wbGl0ZWREaXYgPSAoKSA9PiB7XHJcblxyXG4gICAgcHJvamVjdHNDb250ZW50LnRleHRDb250ZW50ID0gJyc7XHJcbiAgICBsZXQgYm9yZGVyQ29sb3JDbGFzcztcclxuXHJcbiAgICBub3dQYWdlSW5UYXNrcyhub3dQcm9qZWN0KTtcclxuICAgIFxyXG4gICAgZm9yKGxldCBqID0gMDsgaiA8IGNvbXBsaXRlZFRhc2tzLmxlbmd0aDsgaisrKXtcclxuXHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYoY29tcGxpdGVkVGFza3Nbal0ucHJpb3JpdHkgPT0gJ2xvdycpe1xyXG4gICAgICAgICAgICBib3JkZXJDb2xvckNsYXNzID0gJ2xpZ2h0Ymx1ZSc7XHJcbiAgICAgICAgfWVsc2UgaWYoY29tcGxpdGVkVGFza3Nbal0ucHJpb3JpdHkgPT0gJ21lZGl1bScpe1xyXG4gICAgICAgICAgICBib3JkZXJDb2xvckNsYXNzID0gJ29yYW5nZSc7XHJcbiAgICAgICAgfWVsc2UgaWYoY29tcGxpdGVkVGFza3Nbal0ucHJpb3JpdHkgPT0gJ2hpZ2gnKXtcclxuICAgICAgICAgICAgYm9yZGVyQ29sb3JDbGFzcyA9ICdyZWQnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgbWFueVByb2plY3RzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgbWFueVByb2plY3RzLmNsYXNzTGlzdC5hZGQoJ21hbnlQcm9qZWN0cycpO1xyXG5cclxuICAgICAgICBjb25zdCBkaXZUYXNrcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGRpdlRhc2tzLmRhdGFzZXQuaWQgPSBjb21wbGl0ZWRUYXNrc1tqXS5pZDtcclxuICAgICAgICBkaXZUYXNrcy5jbGFzc0xpc3QuYWRkKCd0YXNrcycpO1xyXG4gICAgICAgIGRpdlRhc2tzLmNsYXNzTGlzdC5hZGQoYm9yZGVyQ29sb3JDbGFzcyk7XHJcblxyXG4gICAgICAgIGNvbnN0IG5hbWVBbmRQcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIG5hbWVBbmRQcmlvcml0eS5jbGFzc0xpc3QuYWRkKCduYW1lLWFuZC1wcmlvcml0eScpO1xyXG5cclxuICAgICAgICBjb25zdCBjaGVja2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cclxuICAgICAgICBuYW1lQW5kUHJpb3JpdHkuYXBwZW5kQ2hpbGQoY2hlY2tib3gpO1xyXG5cclxuICAgICAgICBjb25zdCBuYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgbmFtZS50ZXh0Q29udGVudCA9IGNvbXBsaXRlZFRhc2tzW2pdLm5hbWU7XHJcbiAgICAgICAgbmFtZS5jbGFzc0xpc3QuYWRkKCduYW1lJyk7XHJcblxyXG4gICAgICAgIG5hbWVBbmRQcmlvcml0eS5hcHBlbmRDaGlsZChuYW1lKTtcclxuXHJcbiAgICAgICAgZGl2VGFza3MuYXBwZW5kQ2hpbGQobmFtZUFuZFByaW9yaXR5KTtcclxuXHJcbiAgICAgICAgY29uc3QgZGVsZXRlRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgZGVsZXRlRGl2LmNsYXNzTGlzdC5hZGQoJ2RlbGV0ZScpO1xyXG5cclxuICAgICAgICBjb25zdCB2aWV3TW9yZUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgICAgIHZpZXdNb3JlQnRuLmNsYXNzTGlzdC5hZGQoJ3ZpZXdNb3JlQnRuQ29tcGxpdGVkJyk7XHJcbiAgICAgICAgdmlld01vcmVCdG4udGV4dENvbnRlbnQgPSAndmlldyBtb3JlJztcclxuICAgICAgICB2aWV3TW9yZUJ0bi5kYXRhc2V0LmlkID0gY29tcGxpdGVkVGFza3Nbal0uaWQ7XHJcblxyXG4gICAgICAgIGRlbGV0ZURpdi5hcHBlbmRDaGlsZCh2aWV3TW9yZUJ0bik7XHJcblxyXG4gICAgICAgIGNvbnN0IGRlbGV0ZUJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICBkZWxldGVCdG4uY2xhc3NMaXN0LmFkZCgnbWF0ZXJpYWwtaWNvbnMnKTtcclxuICAgICAgICBkZWxldGVCdG4udGV4dENvbnRlbnQgPSAnZGVsZXRlJztcclxuICAgICAgICBkZWxldGVCdG4uY2xhc3NMaXN0LmFkZCgnY29tcGxpdGVkVGFza3NEZWxldGVCdXR0b24nKTtcclxuICAgICAgICBkZWxldGVCdG4uZGF0YXNldC5pZCA9IGNvbXBsaXRlZFRhc2tzW2pdLmlkO1xyXG5cclxuICAgICAgICBkZWxldGVEaXYuYXBwZW5kQ2hpbGQoZGVsZXRlQnRuKTtcclxuXHJcbiAgICAgICAgY29uc3QgcHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBwcmlvcml0eS5jbGFzc0xpc3QuYWRkKCdwcmlvcml0eScpO1xyXG4gICAgXHJcbiAgICAgICAgZGl2VGFza3MuYXBwZW5kQ2hpbGQoZGVsZXRlRGl2KTtcclxuXHJcbiAgICAgICAgbWFueVByb2plY3RzLmFwcGVuZENoaWxkKGRpdlRhc2tzKTtcclxuXHJcbiAgICAgICAgcHJvamVjdHNDb250ZW50LmFwcGVuZENoaWxkKG1hbnlQcm9qZWN0cyk7XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCBiZ0ZpdmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmdGaXZlJyk7XHJcbmNvbnN0IGRlbGV0ZVRhc2tzVHdvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRlbGV0ZVRhc2tzVHdvJyk7XHJcbmNvbnN0IGNhbmNlbFR3byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYW5jZWxUd28nKTtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgIGlmKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnY29tcGxpdGVkVGFza3NEZWxldGVCdXR0b24nKSl7XHJcbiAgICAgICAgYmdGaXZlLmNsYXNzTGlzdC5yZW1vdmUoJ3Zpc2libGl0eScpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNhbmNlbFR3by5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgYmdGaXZlLmNsYXNzTGlzdC5hZGQoJ3Zpc2libGl0eScpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgZGVsZXRlVGFza3NUd28uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBjb21wbGl0ZWRUYXNrcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICBpZihjb21wbGl0ZWRUYXNrc1tpXS5pZCA9PSBlLnRhcmdldC5kYXRhc2V0LmlkKXtcclxuICAgICAgICAgICAgICAgICAgICBjb21wbGl0ZWRUYXNrcy5zcGxpY2UoaSwgMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGNvbXBsaXRlZERpdigpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhuZXdBcnIpO1xyXG4gICAgICAgICAgICBiZ0ZpdmUuY2xhc3NMaXN0LmFkZCgndmlzaWJsaXR5Jyk7XHJcblxyXG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oJ25ld0FycicsIEpTT04uc3RyaW5naWZ5KG5ld0FycikpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0pXHJcblxyXG5jb25zdCB1cGRhdGVQb3BVcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5iZ1NpeCcpO1xyXG5jb25zdCBjbG9zZVRhc2tzVXBkYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNsb3NlVGFza3NVcGRhdGUnKTtcclxuXHJcbmNvbnN0IHVwZGF0ZU5hbWVUYXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy51cGRhdGVOYW1lVGFza3MnKTtcclxuY29uc3QgdXBkYXRlRGVzY3JpcHRpb250YXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy51cGRhdGVEZXNjcmlwdGlvbnRhc2tzJyk7XHJcbmNvbnN0IHVwZGF0ZURhdGVUYXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy51cGRhdGVEYXRlVGFza3MnKTtcclxuY29uc3QgdXBkYXRlUHJpb3JpdHlUYXNrc0lucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnVwZGF0ZVByaW9yaXR5VGFza3NJbnB1dCcpO1xyXG5cclxuY29uc3Qgbm9WYWxpZFVwZGF0ZU9uZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ub1ZhbGlkVXBkYXRlT25lJyk7XHJcbmNvbnN0IG5vVmFsaWRVcGRhdGVUd28gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubm9WYWxpZFVwZGF0ZVR3bycpO1xyXG5jb25zdCBub1ZhbGlkVXBkYXRlVGhyZWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubm9WYWxpZFVwZGF0ZVRocmVlJyk7XHJcbmNvbnN0IG5vVmFsaWRVcGRhdGVGb3VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5vVmFsaWRVcGRhdGVGb3VyJyk7XHJcblxyXG5jb25zdCBVcGRhdGVUYXNrc0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5VcGRhdGVUYXNrc0J1dHRvbicpO1xyXG5cclxuY29uc3QgdmFsaWRVcGRhdGUgPSAoKSA9PiB7XHJcbiAgICBsZXQgY291bnRUZXN0ID0gMDtcclxuXHJcbiAgICBpZighdXBkYXRlTmFtZVRhc2tzLnZhbHVlKXtcclxuICAgICAgICBub1ZhbGlkVXBkYXRlT25lLmNsYXNzTGlzdC5yZW1vdmUoJ3Zpc2libGl0eScpO1xyXG4gICAgICAgIHVwZGF0ZU5hbWVUYXNrcy5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkIHJlZCc7XHJcbiAgICAgICAgY291bnRUZXN0Kys7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBub1ZhbGlkVXBkYXRlT25lLmNsYXNzTGlzdC5hZGQoJ3Zpc2libGl0eScpO1xyXG4gICAgICAgIHVwZGF0ZU5hbWVUYXNrcy5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkIGJsYWNrJztcclxuICAgIH1cclxuICAgIGlmKCF1cGRhdGVEZXNjcmlwdGlvbnRhc2tzLnZhbHVlKXtcclxuICAgICAgICBub1ZhbGlkVXBkYXRlVHdvLmNsYXNzTGlzdC5yZW1vdmUoJ3Zpc2libGl0eScpO1xyXG4gICAgICAgIHVwZGF0ZURlc2NyaXB0aW9udGFza3Muc3R5bGUuYm9yZGVyID0gJzFweCBzb2xpZCByZWQnO1xyXG4gICAgICAgIGNvdW50VGVzdCsrO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgbm9WYWxpZFVwZGF0ZVR3by5jbGFzc0xpc3QuYWRkKCd2aXNpYmxpdHknKTtcclxuICAgICAgICB1cGRhdGVEZXNjcmlwdGlvbnRhc2tzLnN0eWxlLmJvcmRlciA9ICcxcHggc29saWQgYmxhY2snO1xyXG4gICAgfVxyXG4gICAgaWYoIXVwZGF0ZURhdGVUYXNrcy52YWx1ZSl7XHJcbiAgICAgICAgbm9WYWxpZFVwZGF0ZVRocmVlLmNsYXNzTGlzdC5yZW1vdmUoJ3Zpc2libGl0eScpO1xyXG4gICAgICAgIHVwZGF0ZURhdGVUYXNrcy5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkIHJlZCc7XHJcbiAgICAgICAgY291bnRUZXN0Kys7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBub1ZhbGlkVXBkYXRlVGhyZWUuY2xhc3NMaXN0LmFkZCgndmlzaWJsaXR5Jyk7XHJcbiAgICAgICAgdXBkYXRlRGF0ZVRhc2tzLnN0eWxlLmJvcmRlciA9ICcxcHggc29saWQgYmxhY2snO1xyXG4gICAgfVxyXG4gICAgaWYoIXVwZGF0ZVByaW9yaXR5VGFza3NJbnB1dC52YWx1ZSl7XHJcbiAgICAgICAgbm9WYWxpZFVwZGF0ZUZvdXIuY2xhc3NMaXN0LnJlbW92ZSgndmlzaWJsaXR5Jyk7XHJcbiAgICAgICAgdXBkYXRlUHJpb3JpdHlUYXNrc0lucHV0LnN0eWxlLmJvcmRlciA9ICcxcHggc29saWQgcmVkJztcclxuICAgICAgICBjb3VudFRlc3QrKztcclxuICAgIH1lbHNle1xyXG4gICAgICAgIG5vVmFsaWRVcGRhdGVGb3VyLmNsYXNzTGlzdC5hZGQoJ3Zpc2libGl0eScpO1xyXG4gICAgICAgIHVwZGF0ZVByaW9yaXR5VGFza3NJbnB1dC5zdHlsZS5ib3JkZXIgPSAnMXB4IHNvbGlkIGJsYWNrJztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm57XHJcbiAgICAgICAgY291bnRUZXN0LFxyXG4gICAgfVxyXG59XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICBcclxuICAgIGxldCB0ZXN0ID0gMDtcclxuICAgIGxldCB0ZXN0VHdvID0gMDtcclxuXHJcbiAgICBpZihlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2VkaXRCdXR0b24nKSl7XHJcblxyXG4gICAgICAgIGZvcihsZXQgaSA9IDE7IGkgPCBuZXdBcnIubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICBmb3IobGV0IGogPSAwOyBqIDwgbmV3QXJyW2ldLnRhc2tzLmxlbmd0aDsgaisrKXtcclxuICAgICAgICAgICAgICAgIGlmKG5ld0FycltpXS50YXNrc1tqXS5pZCA9PSBlLnRhcmdldC5kYXRhc2V0LmlkKXtcclxuICAgICAgICAgICAgICAgICAgICB0ZXN0ID0gaTtcclxuICAgICAgICAgICAgICAgICAgICB0ZXN0VHdvID0gajtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdXBkYXRlTmFtZVRhc2tzLnZhbHVlID0gbmV3QXJyW3Rlc3RdLnRhc2tzW3Rlc3RUd29dLm5hbWU7XHJcbiAgICAgICAgdXBkYXRlRGVzY3JpcHRpb250YXNrcy52YWx1ZSA9IG5ld0Fyclt0ZXN0XS50YXNrc1t0ZXN0VHdvXS5kZWNyaXB0aW9uO1xyXG4gICAgICAgIHVwZGF0ZURhdGVUYXNrcy52YWx1ZSA9IG5ld0Fyclt0ZXN0XS50YXNrc1t0ZXN0VHdvXS5kYXRlO1xyXG4gICAgICAgIHVwZGF0ZVByaW9yaXR5VGFza3NJbnB1dC52YWx1ZSA9IG5ld0Fyclt0ZXN0XS50YXNrc1t0ZXN0VHdvXS5wcmlvcml0eTtcclxuXHJcbiAgICAgICAgdXBkYXRlUG9wVXAuY2xhc3NMaXN0LnJlbW92ZSgndmlzaWJsaXR5Jyk7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKHRlc3QsIHRlc3RUd28pO1xyXG5cclxuICAgICAgICBjbG9zZVRhc2tzVXBkYXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICB1cGRhdGVOYW1lVGFza3MudmFsdWUgPSAnJztcclxuICAgICAgICAgICAgdXBkYXRlRGVzY3JpcHRpb250YXNrcy52YWx1ZSA9ICcnO1xyXG4gICAgICAgICAgICB1cGRhdGVEYXRlVGFza3MudmFsdWUgPSAnJztcclxuICAgICAgICAgICAgdXBkYXRlUHJpb3JpdHlUYXNrc0lucHV0LnZhbHVlID0gJyc7XHJcblxyXG4gICAgICAgICAgICB1cGRhdGVQb3BVcC5jbGFzc0xpc3QuYWRkKCd2aXNpYmxpdHknKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBVcGRhdGVUYXNrc0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKHZhbGlkVXBkYXRlKCkuY291bnRUZXN0KXtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3T2JqID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB1cGRhdGVOYW1lVGFza3MudmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlY3JpcHRpb246IHVwZGF0ZURlc2NyaXB0aW9udGFza3MudmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGU6IHVwZGF0ZURhdGVUYXNrcy52YWx1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcHJpb3JpdHk6IHVwZGF0ZVByaW9yaXR5VGFza3NJbnB1dC52YWx1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IGUudGFyZ2V0LmRhdGFzZXQuaWQsXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgICAgICAgICAgbmV3QXJyW3Rlc3RdLnRhc2tzLnNwbGljZSh0ZXN0VHdvLCAxLCBuZXdPYmopO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRlc3QsIHRlc3RUd28pO1xyXG4gICAgXHJcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlTmFtZVRhc2tzLnZhbHVlID0gJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlRGVzY3JpcHRpb250YXNrcy52YWx1ZSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZURhdGVUYXNrcy52YWx1ZSA9ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVByaW9yaXR5VGFza3NJbnB1dC52YWx1ZSA9ICcnO1xyXG4gICAgXHJcbiAgICAgICAgICAgICAgICAgICAgdGVzdCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGVzdFR3byA9IDA7XHJcbiAgICBcclxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVQb3BVcC5jbGFzc0xpc3QuYWRkKCd2aXNpYmxpdHknKTtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBpZihub3dQcm9qZWN0ID09ICdhbGwnKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWxsVGFza3MoKTtcclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlRGl2KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cobmV3QXJyKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5zZXRJdGVtKCduZXdBcnInLCBKU09OLnN0cmluZ2lmeShuZXdBcnIpKTtcclxuICAgICAgICAgICAgICAgIH1jYXRjaChlcnIpe1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59KVxyXG5cclxuY29uc3Qgbm93UGFnZUluVGFza3MgPSAoaXRlbSkgPT4ge1xyXG4gICAgY29uc3Qgbm93UGFnZU5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIG5vd1BhZ2VOYW1lLnRleHRDb250ZW50ID0gaXRlbTtcclxuICAgIG5vd1BhZ2VOYW1lLmNsYXNzTGlzdC5hZGQoJ25vd1BhZ2VOYW1lJyk7XHJcblxyXG4gICAgcHJvamVjdHNDb250ZW50LmFwcGVuZENoaWxkKG5vd1BhZ2VOYW1lKTtcclxufVxyXG5cclxuY29uc3QgY3JlYXRlRGl2ID0gKCkgPT4ge1xyXG5cclxuICAgIGxldCBpbmRleDtcclxuICAgIGxldCBib3JkZXJDb2xvckNsYXNzO1xyXG4gICAgcHJvamVjdHNDb250ZW50LnRleHRDb250ZW50ID0gJyc7XHJcblxyXG4gICAgbm93UGFnZUluVGFza3Mobm93UHJvamVjdCk7XHJcblxyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IG5ld0Fyci5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgaWYobmV3QXJyW2ldLm5hbWUgPT0gbm93UHJvamVjdCl7XHJcbiAgICAgICAgICAgIGluZGV4ID0gaTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZm9yKGxldCBqID0gMDsgaiA8IG5ld0FycltpbmRleF0udGFza3MubGVuZ3RoOyBqKyspe1xyXG5cclxuICAgICAgICBpZihuZXdBcnJbaW5kZXhdLnRhc2tzW2pdLnByaW9yaXR5ID09ICdsb3cnKXtcclxuICAgICAgICAgICAgYm9yZGVyQ29sb3JDbGFzcyA9ICdsaWdodGJsdWUnO1xyXG4gICAgICAgIH1lbHNlIGlmKG5ld0FycltpbmRleF0udGFza3Nbal0ucHJpb3JpdHkgPT0gJ21lZGl1bScpe1xyXG4gICAgICAgICAgICBib3JkZXJDb2xvckNsYXNzID0gJ29yYW5nZSc7XHJcbiAgICAgICAgfWVsc2UgaWYobmV3QXJyW2luZGV4XS50YXNrc1tqXS5wcmlvcml0eSA9PSAnaGlnaCcpe1xyXG4gICAgICAgICAgICBib3JkZXJDb2xvckNsYXNzID0gJ3JlZCc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBtYW55UHJvamVjdHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBtYW55UHJvamVjdHMuY2xhc3NMaXN0LmFkZCgnbWFueVByb2plY3RzJyk7XHJcblxyXG4gICAgICAgIGNvbnN0IGRpdlRhc2tzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgZGl2VGFza3MuZGF0YXNldC5pZCA9IG5ld0FycltpbmRleF0udGFza3Nbal0uaWQ7XHJcbiAgICAgICAgZGl2VGFza3MuY2xhc3NMaXN0LmFkZCgndGFza3MnKTtcclxuICAgICAgICBkaXZUYXNrcy5jbGFzc0xpc3QuYWRkKGJvcmRlckNvbG9yQ2xhc3MpO1xyXG5cclxuICAgICAgICBjb25zdCBuYW1lQW5kUHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBuYW1lQW5kUHJpb3JpdHkuY2xhc3NMaXN0LmFkZCgnbmFtZS1hbmQtcHJpb3JpdHknKTtcclxuXHJcbiAgICAgICAgY29uc3QgY2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHJcbiAgICAgICAgY29uc3QgY2hlY2tib3hJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XHJcbiAgICAgICAgY2hlY2tib3hJbnB1dC5kYXRhc2V0LmlkID0gbmV3QXJyW2luZGV4XS50YXNrc1tqXS5pZDtcclxuICAgICAgICBjaGVja2JveElucHV0LmNsYXNzTGlzdC5hZGQoJ2NoZWNrYm94Jyk7XHJcbiAgICAgICAgY2hlY2tib3hJbnB1dC50eXBlID0gJ2NoZWNrYm94JztcclxuXHJcbiAgICAgICAgY2hlY2tib3guYXBwZW5kQ2hpbGQoY2hlY2tib3hJbnB1dCk7XHJcblxyXG4gICAgICAgIG5hbWVBbmRQcmlvcml0eS5hcHBlbmRDaGlsZChjaGVja2JveCk7XHJcblxyXG4gICAgICAgIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBuYW1lLnRleHRDb250ZW50ID0gbmV3QXJyW2luZGV4XS50YXNrc1tqXS5uYW1lO1xyXG4gICAgICAgIG5hbWUuY2xhc3NMaXN0LmFkZCgnbmFtZScpO1xyXG5cclxuICAgICAgICBuYW1lQW5kUHJpb3JpdHkuYXBwZW5kQ2hpbGQobmFtZSk7XHJcblxyXG4gICAgICAgIGRpdlRhc2tzLmFwcGVuZENoaWxkKG5hbWVBbmRQcmlvcml0eSk7XHJcblxyXG4gICAgICAgIGNvbnN0IGRlbGV0ZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGRlbGV0ZURpdi5jbGFzc0xpc3QuYWRkKCdkZWxldGUnKTtcclxuXHJcbiAgICAgICAgY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgICAgIGVkaXRCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWRpdEJ1dHRvbicpO1xyXG4gICAgICAgIGVkaXRCdXR0b24udGV4dENvbnRlbnQgPSAnZWRpdCc7XHJcbiAgICAgICAgZWRpdEJ1dHRvbi5kYXRhc2V0LmlkID0gbmV3QXJyW2luZGV4XS50YXNrc1tqXS5pZDtcclxuXHJcbiAgICAgICAgZGVsZXRlRGl2LmFwcGVuZENoaWxkKGVkaXRCdXR0b24pXHJcblxyXG4gICAgICAgIGNvbnN0IHZpZXdNb3JlQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICAgICAgdmlld01vcmVCdG4uY2xhc3NMaXN0LmFkZCgndmlld01vcmVCdG4nKTtcclxuICAgICAgICB2aWV3TW9yZUJ0bi50ZXh0Q29udGVudCA9ICd2aWV3IG1vcmUnO1xyXG4gICAgICAgIHZpZXdNb3JlQnRuLmRhdGFzZXQuaWQgPSBuZXdBcnJbaW5kZXhdLnRhc2tzW2pdLmlkO1xyXG5cclxuICAgICAgICBkZWxldGVEaXYuYXBwZW5kQ2hpbGQodmlld01vcmVCdG4pO1xyXG5cclxuICAgICAgICBjb25zdCBtYXRlcmlhbEljb25zRGVsZXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgICAgIG1hdGVyaWFsSWNvbnNEZWxldGUuY2xhc3NMaXN0LmFkZCgnbWF0ZXJpYWwtaWNvbnMnKTtcclxuICAgICAgICBtYXRlcmlhbEljb25zRGVsZXRlLmNsYXNzTGlzdC5hZGQoJ2RlbGV0ZScpO1xyXG4gICAgICAgIG1hdGVyaWFsSWNvbnNEZWxldGUudGV4dENvbnRlbnQgPSAnZGVsZXRlJztcclxuICAgICAgICBtYXRlcmlhbEljb25zRGVsZXRlLmRhdGFzZXQuaWQgPSBuZXdBcnJbaW5kZXhdLnRhc2tzW2pdLmlkO1xyXG5cclxuICAgICAgICBjb25zdCBwcmlvcml0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIHByaW9yaXR5LmNsYXNzTGlzdC5hZGQoJ3ByaW9yaXR5Jyk7XHJcblxyXG4gICAgICAgIGRlbGV0ZURpdi5hcHBlbmRDaGlsZChtYXRlcmlhbEljb25zRGVsZXRlKTtcclxuICAgIFxyXG4gICAgICAgIGRpdlRhc2tzLmFwcGVuZENoaWxkKGRlbGV0ZURpdik7XHJcblxyXG4gICAgICAgIG1hbnlQcm9qZWN0cy5hcHBlbmRDaGlsZChkaXZUYXNrcyk7XHJcblxyXG4gICAgICAgIHByb2plY3RzQ29udGVudC5hcHBlbmRDaGlsZChtYW55UHJvamVjdHMpO1xyXG4gICAgfVxyXG59XHJcblxyXG5sZXQgaW5kZXhNYWluT25lO1xyXG5sZXQgaW5kZXhNYWluVHdvO1xyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgaWYoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjbG9zZUJ0bk1vcmUnKSl7XHJcbiAgICAgICAgWy4uLmRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ21vcmVDb250ZW50JyldLm1hcChpdGVtID0+IGl0ZW0gJiYgaXRlbS5yZW1vdmUoKSk7XHJcbiAgICAgICAgWy4uLmRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2JnVGhyZWUnKV0ubWFwKGl0ZW0gPT4gaXRlbSAmJiBpdGVtLnJlbW92ZSgpKTtcclxuICAgIH1cclxufSlcclxuXHJcbmNvbnN0IGFkZERpdiA9ICgpID0+IHtcclxuICAgIGNvbnN0IG1vcmVDb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBtb3JlQ29udGVudC5jbGFzc0xpc3QuYWRkKCdtb3JlQ29udGVudCcpO1xyXG5cclxuICAgIGNvbnN0IGNsb3NlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBjbG9zZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdjbG9zZUJ0bk1vcmUnKTtcclxuICAgIGNsb3NlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ21hdGVyaWFsLWljb25zJylcclxuICAgIGNsb3NlQnV0dG9uLnRleHRDb250ZW50ID0gJ2Nsb3NlJztcclxuXHJcbiAgICBtb3JlQ29udGVudC5hcHBlbmRDaGlsZChjbG9zZUJ1dHRvbik7XHJcblxyXG4gICAgY29uc3QgbmFtZVByb2plY3RBbmREZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbmFtZVByb2plY3RBbmREZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKCduYW1lUHJvamVjdC1hbmQtZGVzY3JpcHRpb24nKTtcclxuXHJcbiAgICBjb25zdCBuYW1lUHJvamVjdFR3byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgbmFtZVByb2plY3RUd28udGV4dENvbnRlbnQgPSBgbmFtZTogJHtuZXdBcnJbaW5kZXhNYWluT25lXS50YXNrc1tpbmRleE1haW5Ud29dLm5hbWV9YDtcclxuICAgIG5hbWVQcm9qZWN0VHdvLmNsYXNzTGlzdC5hZGQoJ25hbWVQcm9qZWN0Jyk7XHJcblxyXG4gICAgbmFtZVByb2plY3RBbmREZXNjcmlwdGlvbi5hcHBlbmRDaGlsZChuYW1lUHJvamVjdFR3byk7XHJcblxyXG4gICAgY29uc3QgZGVzY3JpcHRpb25Ud28gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGRlc2NyaXB0aW9uVHdvLnRleHRDb250ZW50ID0gYGRlc2NyaXB0aW9uOiAke25ld0FycltpbmRleE1haW5PbmVdLnRhc2tzW2luZGV4TWFpblR3b10uZGVjcmlwdGlvbn1gO1xyXG4gICAgZGVzY3JpcHRpb25Ud28uY2xhc3NMaXN0LmFkZCgnZGVzY3JpcHRpb25Qcm9qZWN0Jyk7XHJcblxyXG4gICAgbmFtZVByb2plY3RBbmREZXNjcmlwdGlvbi5hcHBlbmRDaGlsZChkZXNjcmlwdGlvblR3byk7XHJcblxyXG4gICAgbW9yZUNvbnRlbnQuYXBwZW5kQ2hpbGQobmFtZVByb2plY3RBbmREZXNjcmlwdGlvbik7XHJcblxyXG4gICAgY29uc3QgZGF0ZUFuZFByaW9yaXR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBkYXRlQW5kUHJpb3JpdHkuY2xhc3NMaXN0LmFkZCgnZGF0ZS1hbmQtcHJpb3JpdHknKTtcclxuXHJcbiAgICBjb25zdCBkYXRlUHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZGF0ZVByb2plY3QudGV4dENvbnRlbnQgPSBgZGF0ZTogJHtuZXdBcnJbaW5kZXhNYWluT25lXS50YXNrc1tpbmRleE1haW5Ud29dLmRhdGV9YDtcclxuICAgIGRhdGVQcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ2RhdGVQcm9qZWN0Jyk7XHJcblxyXG4gICAgZGF0ZUFuZFByaW9yaXR5LmFwcGVuZENoaWxkKGRhdGVQcm9qZWN0KTtcclxuXHJcbiAgICBjb25zdCBwcmlvcml0eVByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHByaW9yaXR5UHJvamVjdC50ZXh0Q29udGVudCA9IGBwcmlvcml0eTogJHtuZXdBcnJbaW5kZXhNYWluT25lXS50YXNrc1tpbmRleE1haW5Ud29dLnByaW9yaXR5fWA7XHJcbiAgICBwcmlvcml0eVByb2plY3QuY2xhc3NMaXN0LmFkZCgncHJpb3JpdHlQcm9qZWN0Jyk7XHJcblxyXG4gICAgZGF0ZUFuZFByaW9yaXR5LmFwcGVuZENoaWxkKHByaW9yaXR5UHJvamVjdCk7XHJcblxyXG4gICAgbW9yZUNvbnRlbnQuYXBwZW5kQ2hpbGQoZGF0ZUFuZFByaW9yaXR5KTtcclxuXHJcbiAgICBjb25zdCBiZ1RocmVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBiZ1RocmVlLmNsYXNzTGlzdC5hZGQoJ2JnVGhyZWUnKTtcclxuXHJcbiAgICBiZ1RocmVlLmFwcGVuZENoaWxkKG1vcmVDb250ZW50KTtcclxuXHJcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGJnVGhyZWUpO1xyXG59XHJcblxyXG5jb25zdCBhZGRUb1BhZ2VOYW1lUHJvamVjdCA9ICgpID0+IHtcclxuICAgIHJvb3QudGV4dENvbnRlbnQgPSAnJztcclxuICAgIFxyXG4gICAgZm9yKGxldCBpID0gMTsgaSA8IG5ld0Fyci5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgaWYobmV3QXJyW2ldLm5hbWUgPT0gJ2luYm94Jyl7XHJcblxyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgICAgICAgICBwLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3RzTmFtZUluUGFnZScpO1xyXG4gICAgICAgICAgICBwLnRleHRDb250ZW50ID0gbmV3QXJyW2ldLm5hbWU7XHJcblxyXG4gICAgICAgICAgICBpZihwLnRleHRDb250ZW50KXtcclxuICAgICAgICAgICAgICAgIHJvb3QuYXBwZW5kQ2hpbGQocCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJvamVjdHNOYW1lSW5QYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnByb2plY3RzTmFtZUluUGFnZScpO1xyXG59XHJcblxyXG52aWV3TW9yZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGlmKG1vcmUudGV4dENvbnRlbnQgPT0gJ2V4cGFuZF9tb3JlJyl7XHJcbiAgICAgICAgbW9yZS50ZXh0Q29udGVudCA9ICdleHBhbmRfbGVzcyc7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgICBtb3JlLnRleHRDb250ZW50ID0gJ2V4cGFuZF9tb3JlJztcclxuICAgIH1cclxuICAgIFxyXG4gICAgcHJvamVjdHNEaXYuY2xhc3NMaXN0LnRvZ2dsZSgndmlzaWJsaXR5Jyk7XHJcbiAgICBwcm9qZWN0Rm9sZGVyLmNsYXNzTGlzdC50b2dnbGUoJ292ZXJmbG93Jyk7XHJcbiAgICBwcm9qZWN0Rm9sZGVyLmNsYXNzTGlzdC50b2dnbGUoJ292ZXJmbG93SGlkZGVuJyk7XHJcbn0pXHJcblxyXG5ub3dQcm9qZWN0ID0gJ2luYm94JztcclxuY3JlYXRlRGl2KCk7IiwiY29uc3QgbWFpblBhZ2UgPSAoKSA9PiB7XHJcblxyXG4gICAgY29uc3Qgcm9vdEFwcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yb290QXBwJyk7XHJcbiAgICBcclxuICAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIG1haW4uY2xhc3NMaXN0LmFkZCgnbWFpbicpO1xyXG4gICAgbWFpbi5jbGFzc0xpc3QuYWRkKCdtYWluTWFpbicpO1xyXG5cclxuICAgIGNvbnN0IHByb2plY3RzRm9sZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBwcm9qZWN0c0ZvbGRlci5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0cy1mb2xkZXInKTtcclxuICAgIHByb2plY3RzRm9sZGVyLmNsYXNzTGlzdC5hZGQoJ2ZvbGRlcicpO1xyXG5cclxuICAgIGNvbnN0IGFsbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgYWxsLmNsYXNzTGlzdC5hZGQoJ2FsbCcpO1xyXG5cclxuICAgIGNvbnN0IGFsbENsaWNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgYWxsQ2xpY2suY2xhc3NMaXN0LmFkZCgnYWxsQ2xpY2snKTtcclxuXHJcbiAgICBjb25zdCBhbGxJbmJveE1hdGVyaWFsSWNvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICBhbGxJbmJveE1hdGVyaWFsSWNvbnMuY2xhc3NMaXN0LmFkZCgnbWF0ZXJpYWwtaWNvbnMnKTtcclxuICAgIGFsbEluYm94TWF0ZXJpYWxJY29ucy50ZXh0Q29udGVudCA9ICdhbGxfaW5ib3gnO1xyXG5cclxuICAgIGFsbENsaWNrLmFwcGVuZChhbGxJbmJveE1hdGVyaWFsSWNvbnMsICdhbGwnKTtcclxuXHJcblxyXG4gICAgYWxsLmFwcGVuZENoaWxkKGFsbENsaWNrKTtcclxuXHJcbiAgICBwcm9qZWN0c0ZvbGRlci5hcHBlbmRDaGlsZChhbGwpO1xyXG5cclxuICAgIGNvbnN0IGluYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBpbmJveC5jbGFzc0xpc3QuYWRkKCdpbmJveCcpO1xyXG5cclxuICAgIGNvbnN0IGluYm94Q2xpY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBpbmJveENsaWNrLmNsYXNzTGlzdC5hZGQoJ2luYm94Q2xpY2snKTtcclxuXHJcbiAgICBjb25zdCBpbmJveE1hdGVyaWFsSWNvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICBpbmJveE1hdGVyaWFsSWNvbnMuY2xhc3NMaXN0LmFkZCgnbWF0ZXJpYWwtaWNvbnMnKTtcclxuICAgIGluYm94TWF0ZXJpYWxJY29ucy50ZXh0Q29udGVudCA9ICdpbmJveCc7XHJcblxyXG4gICAgaW5ib3hDbGljay5hcHBlbmQoaW5ib3hNYXRlcmlhbEljb25zLCAnaW5ib3gnKTtcclxuICAgIFxyXG4gICAgaW5ib3guYXBwZW5kQ2hpbGQoaW5ib3hDbGljayk7XHJcblxyXG4gICAgcHJvamVjdHNGb2xkZXIuYXBwZW5kQ2hpbGQoaW5ib3gpO1xyXG5cclxuICAgIGNvbnN0IHZpZXdNb3JlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB2aWV3TW9yZS5jbGFzc0xpc3QuYWRkKCd2aWV3LW1vcmUnKTtcclxuXHJcbiAgICBjb25zdCBwcm9qZWN0cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuXHJcbiAgICBjb25zdCBmb2xkZXJPcGVuTWF0ZXJpYWxJY29ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgIGZvbGRlck9wZW5NYXRlcmlhbEljb25zLmNsYXNzTGlzdC5hZGQoJ21hdGVyaWFsLWljb25zJyk7XHJcbiAgICBmb2xkZXJPcGVuTWF0ZXJpYWxJY29ucy50ZXh0Q29udGVudCA9ICdmb2xkZXJfb3Blbic7XHJcblxyXG4gICAgcHJvamVjdHMuYXBwZW5kKGZvbGRlck9wZW5NYXRlcmlhbEljb25zLCAncHJvamVjdHMnKTtcclxuXHJcbiAgICB2aWV3TW9yZS5hcHBlbmRDaGlsZChwcm9qZWN0cyk7XHJcblxyXG4gICAgY29uc3QgbW9yZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuXHJcbiAgICBjb25zdCBleHBhbmRNb3JlTWF0ZXJpYWxJY29ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgIGV4cGFuZE1vcmVNYXRlcmlhbEljb25zLmNsYXNzTGlzdC5hZGQoJ21vcmUnKTtcclxuICAgIGV4cGFuZE1vcmVNYXRlcmlhbEljb25zLmNsYXNzTGlzdC5hZGQoJ21hdGVyaWFsLWljb25zJyk7XHJcbiAgICBleHBhbmRNb3JlTWF0ZXJpYWxJY29ucy50ZXh0Q29udGVudCA9ICdleHBhbmRfbW9yZSc7XHJcblxyXG4gICAgbW9yZS5hcHBlbmRDaGlsZChleHBhbmRNb3JlTWF0ZXJpYWxJY29ucyk7XHJcblxyXG4gICAgdmlld01vcmUuYXBwZW5kQ2hpbGQobW9yZSk7XHJcblxyXG4gICAgcHJvamVjdHNGb2xkZXIuYXBwZW5kQ2hpbGQodmlld01vcmUpO1xyXG5cclxuICAgIGNvbnN0IHByb2plY3RzTmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgcHJvamVjdHNOYW1lLmNsYXNzTGlzdC5hZGQoJ3Zpc2libGl0eScpO1xyXG4gICAgcHJvamVjdHNOYW1lLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3RzJyk7XHJcblxyXG4gICAgY29uc3Qgcm9vdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgcm9vdC5jbGFzc0xpc3QuYWRkKCdyb290Jyk7XHJcblxyXG4gICAgcHJvamVjdHNOYW1lLmFwcGVuZENoaWxkKHJvb3QpO1xyXG5cclxuICAgIGNvbnN0IGFkZEl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGFkZEl0ZW0uY2xhc3NMaXN0LmFkZCgnYWRkSXRlbScpO1xyXG5cclxuICAgIGNvbnN0IGFkZE1hdGVyaWFsSWNvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICBhZGRNYXRlcmlhbEljb25zLmNsYXNzTGlzdC5hZGQoJ21hdGVyaWFsLWljb25zJyk7XHJcbiAgICBhZGRNYXRlcmlhbEljb25zLnRleHRDb250ZW50ID0gJ2FkZCc7XHJcblxyXG4gICAgYWRkSXRlbS5hcHBlbmRDaGlsZChhZGRNYXRlcmlhbEljb25zKTtcclxuXHJcbiAgICBjb25zdCBwcm9qZWN0UCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgIHByb2plY3RQLnRleHRDb250ZW50ID0gJ25ldyBwcm9qZWN0JztcclxuXHJcbiAgICBhZGRJdGVtLmFwcGVuZENoaWxkKHByb2plY3RQKTtcclxuXHJcbiAgICBwcm9qZWN0c05hbWUuYXBwZW5kQ2hpbGQoYWRkSXRlbSk7XHJcblxyXG4gICAgcHJvamVjdHNGb2xkZXIuYXBwZW5kQ2hpbGQocHJvamVjdHNOYW1lKTtcclxuXHJcbiAgICBtYWluLmFwcGVuZENoaWxkKHByb2plY3RzRm9sZGVyKTtcclxuXHJcbiAgICBjb25zdCBwcm9qZWN0c0NvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHByb2plY3RzQ29udGVudC5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0cy1jb250ZW50Jyk7XHJcbiAgICBwcm9qZWN0c0NvbnRlbnQuY2xhc3NMaXN0LmFkZCgnY29udGVudCcpO1xyXG5cclxuICAgIG1haW4uYXBwZW5kQ2hpbGQocHJvamVjdHNDb250ZW50KTtcclxuXHJcbiAgICByb290QXBwLmFwcGVuZENoaWxkKG1haW4pO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBtYWluUGFnZTsiLCJjb25zdCBuZXdQcm9qZWN0UG9wVXAgPSAoKSA9PiB7XHJcblxyXG4gICAgY29uc3Qgcm9vdEFwcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yb290QXBwJyk7XHJcbiAgIFxyXG4gICAgY29uc3QgYWRkUHJvamVjdEJnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBhZGRQcm9qZWN0QmcuY2xhc3NMaXN0LmFkZCgnYmdUd28nKTtcclxuICAgIGFkZFByb2plY3RCZy5jbGFzc0xpc3QuYWRkKCd2aXNpYmxpdHknKTtcclxuXHJcbiAgICBjb25zdCBhZGRQcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBhZGRQcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ3Zpc2libGl0eScpO1xyXG4gICAgYWRkUHJvamVjdC5jbGFzc0xpc3QuYWRkKCdhZGRQcm9qZWN0Jyk7XHJcblxyXG4gICAgY29uc3QgbmV3UHJvamVjdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cclxuICAgIGNvbnN0IG5ld1Byb2plY3RIMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XHJcbiAgICBuZXdQcm9qZWN0SDEudGV4dENvbnRlbnQgPSAnTmV3IHByb2plY3QnO1xyXG5cclxuICAgIG5ld1Byb2plY3REaXYuYXBwZW5kQ2hpbGQobmV3UHJvamVjdEgxKTtcclxuXHJcbiAgICBjb25zdCBjbG9zZU1hdGVyaWFsSWNvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICBjbG9zZU1hdGVyaWFsSWNvbnMuY2xhc3NMaXN0LmFkZCgnY2xvc2UnKTtcclxuICAgIGNsb3NlTWF0ZXJpYWxJY29ucy5jbGFzc0xpc3QuYWRkKCdtYXRlcmlhbC1pY29ucycpO1xyXG4gICAgY2xvc2VNYXRlcmlhbEljb25zLnRleHRDb250ZW50ID0gJ2Nsb3NlJztcclxuXHJcbiAgICBuZXdQcm9qZWN0RGl2LmFwcGVuZENoaWxkKGNsb3NlTWF0ZXJpYWxJY29ucyk7XHJcblxyXG4gICAgYWRkUHJvamVjdC5hcHBlbmRDaGlsZChuZXdQcm9qZWN0RGl2KTtcclxuXHJcbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xyXG5cclxuICAgIGNvbnN0IGxhYmVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcclxuICAgIGxhYmVsLnRleHRDb250ZW50ID0gJ1Byb2plY3QgbmFtZTonO1xyXG5cclxuICAgIGZvcm0uYXBwZW5kQ2hpbGQobGFiZWwpO1xyXG5cclxuICAgIGNvbnN0IGFkZFByb2plY3RJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XHJcbiAgICBhZGRQcm9qZWN0SW5wdXQuY2xhc3NMaXN0LmFkZCgnYWRkUHJvamVjdElucHV0Jyk7XHJcbiAgICBhZGRQcm9qZWN0SW5wdXQudHlwZSA9ICd0ZXh0JztcclxuXHJcbiAgICBmb3JtLmFwcGVuZENoaWxkKGFkZFByb2plY3RJbnB1dCk7XHJcblxyXG4gICAgY29uc3QgZW1wdHlJbnB1dFByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XHJcbiAgICBlbXB0eUlucHV0UHJvamVjdC5jbGFzc0xpc3QuYWRkKCd2aXNpYmxpdHknKTtcclxuICAgIGVtcHR5SW5wdXRQcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ2VtcHR5SW5wdXRQcm9qZWN0Jyk7XHJcbiAgICBlbXB0eUlucHV0UHJvamVjdC5jbGFzc0xpc3QuYWRkKCdub1ZhbGlkT25lJyk7XHJcbiAgICBlbXB0eUlucHV0UHJvamVjdC50ZXh0Q29udGVudCA9ICdubyBWYWxpZCBJbnB1dCc7XHJcblxyXG4gICAgZm9ybS5hcHBlbmRDaGlsZChlbXB0eUlucHV0UHJvamVjdCk7XHJcblxyXG4gICAgYWRkUHJvamVjdC5hcHBlbmRDaGlsZChmb3JtKTtcclxuXHJcbiAgICBjb25zdCBidXR0b25TcGFjZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgYnV0dG9uU3BhY2UuY2xhc3NMaXN0LmFkZCgnYnV0dG9uLXNwYWNlJyk7XHJcblxyXG4gICAgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcbiAgICBhZGRCdXR0b24uY2xhc3NMaXN0LmFkZCgnYWRkJyk7XHJcbiAgICBhZGRCdXR0b24udGV4dENvbnRlbnQgPSAnYWRkJztcclxuXHJcbiAgICBidXR0b25TcGFjZS5hcHBlbmRDaGlsZChhZGRCdXR0b24pO1xyXG5cclxuICAgIGFkZFByb2plY3QuYXBwZW5kQ2hpbGQoYnV0dG9uU3BhY2UpO1xyXG5cclxuICAgIGFkZFByb2plY3RCZy5hcHBlbmRDaGlsZChhZGRQcm9qZWN0KTtcclxuXHJcbiAgICByb290QXBwLmFwcGVuZENoaWxkKGFkZFByb2plY3RCZyk7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ld1Byb2plY3RQb3BVcDsiXSwibmFtZXMiOlsicm9vdEFwcCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIm5hdiIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJuYXZJbmJveCIsIm1lbnVNYXRlcmlhbEljb25zIiwidGV4dENvbnRlbnQiLCJhcHBlbmRDaGlsZCIsImluYm94TWF0ZXJpYWxJY29ucyIsIm5hdkRvbmUiLCJhZGROYXZNYXRlcmlhbEljb25zIiwibmF2RG9uZU1hdGVyaWFsSWNvbnMiLCJtYWluIiwicHJvamVjdHNGb2xkZXIiLCJhbGwiLCJhbGxDbGljayIsImFsbEluYm94TWF0ZXJpYWxJY29ucyIsImFwcGVuZCIsImluYm94IiwiaW5ib3hDbGljayIsInZpZXdNb3JlIiwicHJvamVjdHMiLCJmb2xkZXJPcGVuTWF0ZXJpYWxJY29ucyIsIm1vcmUiLCJleHBhbmRNb3JlTWF0ZXJpYWxJY29ucyIsInByb2plY3RzTmFtZSIsInJvb3QiLCJhZGRJdGVtIiwiYWRkTWF0ZXJpYWxJY29ucyIsInByb2plY3RQIiwicHJvamVjdHNDb250ZW50IiwiYWRkUHJvamVjdEJnIiwiYWRkUHJvamVjdCIsIm5ld1Byb2plY3REaXYiLCJuZXdQcm9qZWN0SDEiLCJjbG9zZU1hdGVyaWFsSWNvbnMiLCJmb3JtIiwibGFiZWwiLCJhZGRQcm9qZWN0SW5wdXQiLCJ0eXBlIiwiZW1wdHlJbnB1dFByb2plY3QiLCJidXR0b25TcGFjZSIsImFkZEJ1dHRvbiIsInByb2plY3RzRGl2IiwicHJvamVjdEZvbGRlciIsImJnIiwiYmdUd28iLCJjb21wbGl0ZWRUYXNrcyIsImluYm94TWFpbiIsIm5ld0FyciIsIm5hbWUiLCJ0YXNrcyIsIm5vd1Byb2plY3QiLCJjb3VudCIsIndpbmRvdyIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJKU09OIiwic3RyaW5naWZ5IiwiZGVsZXRlQnV0dG9uIiwicXVlcnlTZWxlY3RvckFsbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJhbGxUYXNrcyIsImJvcmRlckNvbG9yQ2xhc3MiLCJub3dQYWdlSW5UYXNrcyIsImkiLCJsZW5ndGgiLCJqIiwicHJpb3JpdHkiLCJtYW55UHJvamVjdHMiLCJkaXZUYXNrcyIsImRhdGFzZXQiLCJpZCIsIm5hbWVBbmRQcmlvcml0eSIsImNoZWNrYm94IiwiY2hlY2tib3hJbnB1dCIsImRlbGV0ZURpdiIsImVkaXRCdXR0b24iLCJ2aWV3TW9yZUJ0biIsIm1hdGVyaWFsSWNvbnNEZWxldGUiLCJjbG9zZU5ld1Byb2plY3QiLCJhZGROZXdQcm9qZWN0IiwicHJvamVjdHNOYW1lSW5QYWdlIiwibmFtZVRhc2tzIiwiZGVzY3JpcHRpb250YXNrcyIsImRhdGVUYXNrcyIsInByaW9yaXR5VGFza3NJbnB1dCIsImFkZE5hdiIsImFkZHRhc2tzIiwiY2xvc2VUYXNrc0NsaWNrIiwiYWRkVGFza3NCdXR0b24iLCJub1ZhbGlkT25lIiwibm9WYWxpZFR3byIsIm5vVmFsaWRUaHJlZSIsIm5vVmFsaWRGb3VyIiwibm9WYWxpZEZpdmUiLCJjcmVhdGVEaXYiLCJ2YWx1ZSIsInRvZ2dsZSIsInJlbW92ZSIsInN0YW5kYXJkSW5wdXRzIiwic3R5bGUiLCJib3JkZXIiLCJpc1ZhbGlkIiwicHVzaCIsImRlY3JpcHRpb24iLCJkYXRlIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiY29uc29sZSIsImxvZyIsImUiLCJ0YXJnZXQiLCJjb250YWlucyIsImFkZFRvUGFnZU5hbWVQcm9qZWN0IiwiaW5kZXhNYWluIiwiaW5kZXhNYWluT25lIiwiaW5kZXhNYWluVHdvIiwiYWRkRGl2IiwiYnV0dG9uQ2FuY2VsIiwiYnV0dG9uRGVsZXRlVGFza3MiLCJwb3BVcERlbGV0ZSIsImluZGV4IiwiaW5kZXhUd28iLCJzcGxpY2UiLCJjaGVja2VkIiwiY29tcGxpdGVkRGl2IiwiY29tcGxpdGVkVmlld01vcmUiLCJ0ZXN0IiwibW9yZUNvbnRlbnQiLCJjbG9zZUJ1dHRvbiIsIm5hbWVQcm9qZWN0QW5kRGVzY3JpcHRpb24iLCJuYW1lUHJvamVjdFR3byIsImRlc2NyaXB0aW9uVHdvIiwiZGF0ZUFuZFByaW9yaXR5IiwiZGF0ZVByb2plY3QiLCJwcmlvcml0eVByb2plY3QiLCJiZ1RocmVlIiwiYm9keSIsImRlbGV0ZUJ0biIsImJnRml2ZSIsImRlbGV0ZVRhc2tzVHdvIiwiY2FuY2VsVHdvIiwidXBkYXRlUG9wVXAiLCJjbG9zZVRhc2tzVXBkYXRlIiwidXBkYXRlTmFtZVRhc2tzIiwidXBkYXRlRGVzY3JpcHRpb250YXNrcyIsInVwZGF0ZURhdGVUYXNrcyIsInVwZGF0ZVByaW9yaXR5VGFza3NJbnB1dCIsIm5vVmFsaWRVcGRhdGVPbmUiLCJub1ZhbGlkVXBkYXRlVHdvIiwibm9WYWxpZFVwZGF0ZVRocmVlIiwibm9WYWxpZFVwZGF0ZUZvdXIiLCJVcGRhdGVUYXNrc0J1dHRvbiIsInRlc3RUd28iLCJjb3VudFRlc3QiLCJ2YWxpZFVwZGF0ZSIsIm5ld09iaiIsImVyciIsIml0ZW0iLCJub3dQYWdlTmFtZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJtYXAiLCJwIl0sInNvdXJjZVJvb3QiOiIifQ==