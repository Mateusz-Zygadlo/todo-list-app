(()=>{const e=document.querySelector(".view-more"),t=document.querySelector(".more"),n=document.querySelector(".projects"),s=document.querySelector(".projects-folder"),a=document.querySelector(".menu"),d=document.querySelector(".inbox"),c=[{name:"inbox",tasks:[]}];let o,l;const i=document.querySelector(".addItem"),r=document.querySelector(".addProject"),m=document.querySelector(".close"),u=document.querySelector(".add"),p=document.querySelector(".addProjectInput"),v=document.querySelector(".root");let y=document.querySelectorAll(".projectsNameInPage");const L=document.querySelector(".inboxClick"),k=document.querySelector(".nameTasks"),g=document.querySelector(".descriptiontasks"),C=document.querySelector(".dateTasks"),h=document.querySelector(".priorityTasksInput"),E=document.querySelector(".addNav"),x=document.querySelector(".addtasks"),q=document.querySelector(".closeTasksClick"),S=document.querySelector(".addTasksButton"),b=document.querySelector(".projects-content");d.addEventListener("click",(()=>{o="inbox",f()})),a.addEventListener("click",(()=>{s.classList.toggle("z-index-toggle")})),q.addEventListener("click",(()=>{k.value="",g.value="",C.value="",h.value="",x.classList.toggle("visiblity")})),E.addEventListener("click",(()=>{x.classList.toggle("visiblity"),s.classList.remove("z-index-toggle")})),S.addEventListener("click",(()=>{if(o)for(let e=0;e<c.length;e++)c[e].name==o&&(c[e].tasks.push({name:k.value,decription:g.value,date:C.value,priority:h.value,id:Math.floor(1e3*Math.random())}),l=e);else o="inbox",c[0].tasks.push({name:k.value,decription:g.value,date:C.value,priority:h.value,id:Math.floor(1e3*Math.random())}),l=0;f(),console.log(c),console.log(o),k.value="",g.value="",x.classList.toggle("visiblity")})),L.addEventListener("click",(()=>{o="inbox",f()})),document.addEventListener("click",(e=>{if(e.target.classList.contains("projectsNameInPage"))for(let t=0;t<c.length;t++)c[t].name==e.target.textContent&&(o=c[t].name);else{if(!e.target.classList.contains("tasks"))return;{const e=document.querySelector(".moreContent");document.querySelector(".tasks").addEventListener("click",(()=>{e.classList.toggle("visiblity")}))}}f()})),i.addEventListener("click",(()=>{r.classList.toggle("visiblity"),s.classList.remove("z-index-toggle")})),m.addEventListener("click",(()=>{p.value="",r.classList.add("visiblity")})),u.addEventListener("click",(()=>{c.push({name:p.value,tasks:[]}),o=p.value,p.value="",r.classList.add("visiblity"),N(),f(),I()}));const f=()=>{let e;b.textContent="";for(let t=0;t<c.length;t++)c[t].name==o&&(e=t);for(let t=0;t<c[e].tasks.length;t++){const n=document.createElement("div");n.classList.add("manyProjects");const s=document.createElement("div");s.dataset.id=c[e].tasks[t].id,s.classList.add("tasks");const a=document.createElement("div");a.classList.add("name-and-priority");const d=document.createElement("div");d.classList.add("priority"),a.appendChild(d);const o=document.createElement("div");o.classList.add("checkbox");const l=document.createElement("input");l.type="checkbox",o.appendChild(l),a.appendChild(o);const i=document.createElement("div");i.textContent=c[e].tasks[t].name,i.classList.add("name"),a.appendChild(i),s.appendChild(a);const r=document.createElement("div");r.classList.add("delete");const m=document.createElement("span");m.classList.add("material-icons"),m.textContent="delete",r.appendChild(m),s.appendChild(r),n.appendChild(s),b.appendChild(n)}};let j,P;document.addEventListener("click",(e=>{if(e.target.classList.contains("tasks")){let t=e.target.dataset.id;for(let e=0;e<c.length;e++)c[e].name==o&&(j=e);for(let e=0;e<c[j].tasks.length;e++)c[j].tasks[e].id==t&&(P=e);I()}}));const I=()=>{const e=document.createElement("div");e.classList.add("moreContent");const t=document.createElement("div");t.classList.add("nameProject-and-description");const n=document.createElement("div");n.textContent=`name: ${c[j].tasks[P].name}`,n.classList.add("nameProject"),t.appendChild(n);const s=document.createElement("div");s.textContent=`description: ${c[j].tasks[P].decription}`,s.classList.add("descriptionProject"),t.appendChild(s),e.appendChild(t);const a=document.createElement("div");a.classList.add("date-and-priority");const d=document.createElement("div");a.textContent=`date: ${c[j].tasks[P].date}`,d.classList.add("dateProject"),a.appendChild(d);const o=document.createElement("div");o.textContent=`priority: ${c[j].tasks[P].priority}`,o.classList.add("priorityProject"),a.appendChild(o),e.appendChild(a),b.appendChild(e)},N=()=>{for(key in v.textContent="",c)if("inbox"==c[key].name);else{const e=document.createElement("p");e.classList.add("projectsNameInPage"),e.textContent=c[key].name,v.appendChild(e)}y=document.querySelectorAll(".projectsNameInPage")};e.addEventListener("click",(()=>{"expand_more"==t.textContent?t.textContent="expand_less":t.textContent="expand_more",n.classList.toggle("visiblity"),s.classList.toggle("overflow"),s.classList.toggle("overflowHidden")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,