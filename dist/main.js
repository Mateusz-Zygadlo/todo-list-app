(()=>{"use strict";document.querySelector(".nameTasks"),document.querySelector(".descriptiontasks"),document.querySelector(".dateTasks"),document.querySelector(".priorityTasksInput"),(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("nav");t.classList.add("nav");const d=document.createElement("div");d.classList.add("nav-inbox");const s=document.createElement("span");s.classList.add("menu"),s.classList.add("material-icons"),s.textContent="menu",d.appendChild(s);const n=document.createElement("span");n.classList.add("inbox"),n.classList.add("material-icons"),n.textContent="inbox",d.appendChild(n),t.appendChild(d);const a=document.createElement("div");a.classList.add("nav-done");const c=document.createElement("span");c.classList.add("addNav"),c.classList.add("material-icons"),c.textContent="add",a.appendChild(c);const i=document.createElement("span");i.classList.add("done"),i.classList.add("material-icons"),i.textContent="done",a.appendChild(i),t.appendChild(a),e.appendChild(t)})(),(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("div");t.classList.add("main"),t.classList.add("mainMain");const d=document.createElement("div");d.classList.add("projects-folder"),d.classList.add("folder");const s=document.createElement("div");s.classList.add("all");const n=document.createElement("p");n.classList.add("allClick");const a=document.createElement("span");a.classList.add("material-icons"),a.textContent="all_inbox",n.append(a,"all"),s.appendChild(n),d.appendChild(s);const c=document.createElement("div");c.classList.add("inbox");const i=document.createElement("p");i.classList.add("inboxClick");const l=document.createElement("span");l.classList.add("material-icons"),l.textContent="inbox",i.append(l,"inbox"),c.appendChild(i),d.appendChild(c);const o=document.createElement("div");o.classList.add("view-more");const r=document.createElement("p"),p=document.createElement("span");p.classList.add("material-icons"),p.textContent="folder_open",r.append(p,"projects"),o.appendChild(r);const m=document.createElement("p"),u=document.createElement("span");u.classList.add("more"),u.classList.add("material-icons"),u.textContent="expand_more",m.appendChild(u),o.appendChild(m),d.appendChild(o);const L=document.createElement("div");L.classList.add("visiblity"),L.classList.add("projects");const C=document.createElement("div");C.classList.add("root"),L.appendChild(C);const v=document.createElement("div");v.classList.add("addItem");const h=document.createElement("span");h.classList.add("material-icons"),h.textContent="add",v.appendChild(h);const y=document.createElement("p");y.textContent="new project",v.appendChild(y),L.appendChild(v),d.appendChild(L),t.appendChild(d);const E=document.createElement("div");E.classList.add("projects-content"),E.classList.add("content"),t.appendChild(E),e.appendChild(t)})(),(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("div");t.classList.add("bgTwo"),t.classList.add("visiblity");const d=document.createElement("div");d.classList.add("visiblity"),d.classList.add("addProject");const s=document.createElement("div"),n=document.createElement("h1");n.textContent="New project",s.appendChild(n);const a=document.createElement("span");a.classList.add("close"),a.classList.add("material-icons"),a.textContent="close",s.appendChild(a),d.appendChild(s);const c=document.createElement("form"),i=document.createElement("label");i.textContent="Project name:",c.appendChild(i);const l=document.createElement("input");l.classList.add("addProjectInput"),l.type="text",c.appendChild(l);const o=document.createElement("p");o.classList.add("visiblity"),o.classList.add("emptyInputProject"),o.classList.add("noValidOne"),o.textContent="no Valid Input",c.appendChild(o),d.appendChild(c);const r=document.createElement("div");r.classList.add("button-space");const p=document.createElement("button");p.classList.add("add"),p.textContent="add",r.appendChild(p),d.appendChild(r),t.appendChild(d),e.appendChild(t)})(),(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("div");t.classList.add("visiblity"),t.classList.add("bg");const d=document.createElement("div");d.classList.add("visiblity"),d.classList.add("addtasks");const s=document.createElement("div");s.classList.add("closeTasks");const n=document.createElement("h1");n.textContent="New tasks",s.appendChild(n);const a=document.createElement("span");a.classList.add("closeTasksClick"),a.classList.add("material-icons"),a.textContent="close",s.appendChild(a),d.appendChild(s);const c=document.createElement("form"),i=document.createElement("div");i.classList.add("one");const l=document.createElement("label");l.textContent="name:",i.appendChild(l);const o=document.createElement("input");o.type="text",o.classList.add("nameTasks"),i.appendChild(o);const r=document.createElement("p");r.classList.add("visiblity"),r.classList.add("noValidTwo"),r.classList.add("emptyInputProject"),r.textContent="no Valid Input",i.appendChild(r);const p=document.createElement("label");p.textContent="description:",i.appendChild(p);const m=document.createElement("input");m.type="text",m.classList.add("descriptiontasks"),i.appendChild(m);const u=document.createElement("p");u.classList.add("visiblity"),u.classList.add("noValidThree"),u.classList.add("emptyInputProject"),u.textContent="no Valid Input",i.appendChild(u),c.appendChild(i);const L=document.createElement("div");L.classList.add("two");const C=document.createElement("label");C.textContent="date:",L.appendChild(C);const v=document.createElement("input");v.classList.add("dateTasks"),v.type="date",L.appendChild(v);const h=document.createElement("p");h.classList.add("visiblity"),h.classList.add("noValidFour"),h.classList.add("emptyInputProject"),h.textContent="no Valid Input",L.appendChild(h);const y=document.createElement("label");y.setAttribute("for","priority"),y.textContent="priority",L.appendChild(y);const E=document.createElement("select");E.classList.add("priorityTasksInput"),E.id="priority",E.name="priority";const k=document.createElement("option");k.value="low",k.textContent="low",E.appendChild(k);const b=document.createElement("option");b.value="medium",b.textContent="medium",E.appendChild(b);const x=document.createElement("option");x.value="high",x.textContent="high",E.appendChild(x),L.appendChild(E);const g=document.createElement("p");g.classList.add("visiblity"),g.classList.add("noValidFive"),g.classList.add("emptyInputProject"),g.textContent="no Valid Input",L.appendChild(g),c.appendChild(L),d.appendChild(c);const S=document.createElement("div");S.classList.add("button-space");const w=document.createElement("button");w.classList.add("addTasksButton"),w.textContent="add",S.appendChild(w),d.appendChild(S),t.appendChild(d),e.appendChild(t)})(),(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("div");t.classList.add("visiblity"),t.classList.add("bgSix");const d=document.createElement("div");d.classList.add("updateTasks");const s=document.createElement("div");s.classList.add("closeTasks");const n=document.createElement("h1");n.textContent="Update tasks",s.appendChild(n);const a=document.createElement("span");a.classList.add("closeTasksClick"),a.classList.add("material-icons"),a.textContent="close",s.appendChild(a),d.appendChild(s);const c=document.createElement("form"),i=document.createElement("div");i.classList.add("one");const l=document.createElement("label");l.textContent="name:",i.appendChild(l);const o=document.createElement("input");o.type="text",o.classList.add("updateNameTasks"),i.appendChild(o);const r=document.createElement("p");r.classList.add("visiblity"),r.classList.add("noValidUpdateOne"),r.classList.add("emptyInputProject"),r.textContent="no Valid Input",i.appendChild(r);const p=document.createElement("label");p.textContent="description:",i.appendChild(p);const m=document.createElement("input");m.type="text",m.classList.add("updateDescriptiontasks"),i.appendChild(m);const u=document.createElement("p");u.classList.add("visiblity"),u.classList.add("noValidUpdateTwo"),u.classList.add("emptyInputProject"),u.textContent="no Valid Input",i.appendChild(u),c.appendChild(i);const L=document.createElement("div");L.classList.add("two");const C=document.createElement("label");C.textContent="date:",L.appendChild(C);const v=document.createElement("input");v.classList.add("updateDateTasks"),v.type="date",L.appendChild(v);const h=document.createElement("p");h.classList.add("visiblity"),h.classList.add("noValidUpdateThree"),h.classList.add("emptyInputProject"),h.textContent="no Valid Input",L.appendChild(h);const y=document.createElement("label");y.setAttribute("for","priority"),y.textContent="priority",L.appendChild(y);const E=document.createElement("select");E.classList.add("updatePriorityTasksInput"),E.id="priority",E.name="priority";const k=document.createElement("option");k.value="low",k.textContent="low",E.appendChild(k);const b=document.createElement("option");b.value="medium",b.textContent="medium",E.appendChild(b);const x=document.createElement("option");x.value="high",x.textContent="high",E.appendChild(x),L.appendChild(E);const g=document.createElement("p");g.classList.add("visiblity"),g.classList.add("noValidUpdateFour"),g.classList.add("emptyInputProject"),g.textContent="no Valid Input",L.appendChild(g),c.appendChild(L),d.appendChild(c);const S=document.createElement("div");S.classList.add("button-space");const w=document.createElement("button");w.classList.add("UpdateTasksButton"),w.textContent="add",S.appendChild(w),d.appendChild(S),t.appendChild(d),e.appendChild(t)})(),(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("div");t.classList.add("bgFour"),t.classList.add("visiblity");const d=document.createElement("div");d.classList.add("deletePopUp");const s=document.createElement("h1");s.textContent="do you want to delete this tasks",d.appendChild(s);const n=document.createElement("div");n.classList.add("buttons");const a=document.createElement("button");a.classList.add("deleteTasks"),a.textContent="delete",n.appendChild(a);const c=document.createElement("button");c.classList.add("cancel"),c.textContent="cancel",n.appendChild(c),d.appendChild(n),t.appendChild(d),e.appendChild(t)})(),(()=>{const e=document.querySelector(".rootApp"),t=document.createElement("div");t.classList.add("bgFive"),t.classList.add("visiblity");const d=document.createElement("div");d.classList.add("deletePopUpTwo");const s=document.createElement("h1");s.textContent="do you want to delete this tasks",d.appendChild(s);const n=document.createElement("div");n.classList.add("buttons");const a=document.createElement("button");a.classList.add("deleteTasksTwo"),a.textContent="delete",n.appendChild(a);const c=document.createElement("button");c.classList.add("cancelTwo"),c.textContent="cancel",n.appendChild(c),d.appendChild(n),t.appendChild(d),e.appendChild(t)})();const e=[],t=[e,{name:"inbox",tasks:[]}];window.localStorage.setItem("newArr",JSON.stringify(t));const d=document.querySelector(".view-more"),s=document.querySelector(".more"),n=document.querySelector(".projects"),a=document.querySelector(".folder"),c=document.querySelector(".mainMain"),i=document.querySelector(".bg"),l=document.querySelector(".bgTwo"),o=document.querySelector(".inbox");let r;document.querySelector(".allClick").addEventListener("click",(()=>{r="all",p()})),o.addEventListener("click",(()=>{r="inbox",Q()}));const p=()=>{let e;g.textContent="",K(r);for(let d=1;d<t.length;d++)for(let s=0;s<t[d].tasks.length;s++){"low"==t[d].tasks[s].priority?e="lightblue":"medium"==t[d].tasks[s].priority?e="orange":"high"==t[d].tasks[s].priority&&(e="red");const n=document.createElement("div");n.classList.add("manyProjects");const a=document.createElement("div");a.dataset.id=t[d].tasks[s].id,a.classList.add("tasks"),a.classList.add(e);const c=document.createElement("div");c.classList.add("name-and-priority");const i=document.createElement("div"),l=document.createElement("input");l.dataset.id=t[d].tasks[s].id,l.classList.add("checkbox"),l.type="checkbox",i.appendChild(l),c.appendChild(i);const o=document.createElement("div");o.textContent=t[d].tasks[s].name,o.classList.add("name"),c.appendChild(o),a.appendChild(c);const r=document.createElement("div");r.classList.add("delete");const p=document.createElement("button");p.classList.add("editButton"),p.textContent="edit",p.dataset.id=t[d].tasks[s].id,r.appendChild(p);const m=document.createElement("button");m.classList.add("viewMoreBtn"),m.textContent="view more",m.dataset.id=t[d].tasks[s].id,r.appendChild(m);const u=document.createElement("span");u.classList.add("material-icons"),u.classList.add("delete"),u.textContent="delete",u.dataset.id=t[d].tasks[s].id,document.createElement("div").classList.add("priority"),r.appendChild(u),a.appendChild(r),n.appendChild(a),g.appendChild(n)}},m=document.querySelector(".addItem"),u=document.querySelector(".addProject"),L=document.querySelector(".close"),C=document.querySelector(".add"),v=document.querySelector(".addProjectInput"),h=document.querySelector(".root"),y=document.querySelector(".inboxClick"),E=document.querySelector(".addNav"),k=document.querySelector(".addtasks"),b=document.querySelector(".closeTasksClick"),x=document.querySelector(".addTasksButton"),g=document.querySelector(".content"),S=document.querySelector(".noValidOne"),w=document.querySelector(".noValidTwo"),T=document.querySelector(".noValidThree"),q=document.querySelector(".noValidFour"),f=document.querySelector(".noValidFive");document.querySelectorAll(".delete"),b.addEventListener("click",(()=>{nameTasks.value="",descriptiontasks.value="",dateTasks.value="",priorityTasksInput.value="",k.classList.toggle("visiblity"),i.classList.toggle("visiblity")})),E.addEventListener("click",(()=>{k.classList.toggle("visiblity"),i.classList.toggle("visiblity"),a.classList.remove("z-index-toggle"),j()}));const j=()=>{w.classList.add("visiblity"),nameTasks.style.border="1px solid black",T.classList.add("visiblity"),descriptiontasks.style.border="1px solid black",q.classList.add("visiblity"),dateTasks.style.border="1px solid black",f.classList.add("visiblity"),priorityTasksInput.style.border="1px solid black"};x.addEventListener("click",(()=>{})),y.addEventListener("click",(()=>{r="inbox",Q(),console.log(t)})),document.addEventListener("click",(e=>{if(e.target.classList.contains("projectsNameInPage")){for(let d=0;d<t.length;d++)t[d].name==e.target.textContent&&(r=t[d].name);Q()}})),document.addEventListener("click",(e=>{e.target.classList.contains("menu")&&(a.classList.toggle("projects-folder"),a.classList.toggle("projects-folderClick"),g.classList.toggle("projects-content"),g.classList.toggle("projects-contentClick"),c.classList.toggle("mainMain"),c.classList.toggle("mainMainClick"))})),m.addEventListener("click",(()=>{u.classList.toggle("visiblity"),l.classList.toggle("visiblity"),a.classList.remove("z-index-toggle"),S.classList.add("visiblity"),v.style.border="1px solid black"})),L.addEventListener("click",(()=>{v.value="",l.classList.toggle("visiblity"),u.classList.add("visiblity")})),C.addEventListener("click",(()=>{if(!v.value)return S.classList.remove("visiblity"),void(v.style.border="1px solid red");t.push({name:v.value,tasks:[]}),r=v.value,v.value="",u.classList.add("visiblity"),l.classList.toggle("visiblity"),Y(),Q(),window.localStorage.setItem("newArr",JSON.stringify(t))})),document.addEventListener("click",(e=>{if(e.target.classList.contains("viewMoreBtn")){let d=e.target.dataset.id;for(let e=1;e<t.length;e++)for(let s=0;s<t[e].tasks.length;s++)t[e].tasks[s].id==d&&(R=e,W=s);X()}}));const I=document.querySelector(".cancel"),P=document.querySelector(".deleteTasks"),V=document.querySelector(".bgFour");document.addEventListener("click",(e=>{e.target.classList.contains("delete")&&(V.classList.remove("visiblity"),I.addEventListener("click",(()=>{V.classList.add("visiblity")})),P.addEventListener("click",(()=>{for(let d=1;d<t.length;d++)for(let s=0;s<t[d].tasks.length;s++)t[d].tasks[s].id==e.target.dataset.id&&(index=d,indexTwo=s);t[index].tasks.splice(indexTwo,1),"all"==r?p():Q(),console.log(t),V.classList.add("visiblity"),window.localStorage.setItem("newArr",JSON.stringify(t))})))})),document.addEventListener("click",(d=>{let s,n;if(!d.target.classList.contains("checkbox"))return!1;if(d.target.checked){for(let e=1;e<t.length;e++)for(let a=0;a<t[e].tasks.length;a++)t[e].tasks[a].id==d.target.dataset.id&&(s=e,n=a);e.push(t[s].tasks[n]),t[s].tasks.splice(n,1),"all"==r?p():Q(),window.localStorage.setItem("newArr",JSON.stringify(t))}})),document.addEventListener("click",(d=>{d.target.classList.contains("done")&&(console.log([...e]),r="complited",N(),window.localStorage.setItem("newArr",JSON.stringify(t)))})),document.addEventListener("click",(e=>{e.target.classList.contains("viewMoreBtnComplited")&&B(e.target.dataset.id)}));const B=t=>{let d;for(let s=0;s<e.length;s++)t==e[s].id&&(d=s);const s=document.createElement("div");s.classList.add("moreContent");const n=document.createElement("div");n.classList.add("material-icons"),n.classList.add("closeBtnMore"),n.textContent="close",s.appendChild(n);const a=document.createElement("div");a.classList.add("nameProject-and-description");const c=document.createElement("div");c.textContent=`name: ${e[d].name}`,c.classList.add("nameProject"),a.appendChild(c);const i=document.createElement("div");i.textContent=`description: ${e[d].decription}`,i.classList.add("descriptionProject"),a.appendChild(i),s.appendChild(a);const l=document.createElement("div");l.classList.add("date-and-priority");const o=document.createElement("div");o.textContent=`date: ${e[d].date}`,o.classList.add("dateProject"),l.appendChild(o);const r=document.createElement("div");r.textContent=`priority: ${e[d].priority}`,r.classList.add("priorityProject"),l.appendChild(r),s.appendChild(l);const p=document.createElement("div");p.classList.add("bgThree"),p.appendChild(s),document.body.appendChild(p)},N=()=>{let t;g.textContent="",K(r);for(let d=0;d<e.length;d++){"low"==e[d].priority?t="lightblue":"medium"==e[d].priority?t="orange":"high"==e[d].priority&&(t="red");const s=document.createElement("div");s.classList.add("manyProjects");const n=document.createElement("div");n.dataset.id=e[d].id,n.classList.add("tasks"),n.classList.add(t);const a=document.createElement("div");a.classList.add("name-and-priority");const c=document.createElement("div");a.appendChild(c);const i=document.createElement("div");i.textContent=e[d].name,i.classList.add("name"),a.appendChild(i),n.appendChild(a);const l=document.createElement("div");l.classList.add("delete");const o=document.createElement("button");o.classList.add("viewMoreBtnComplited"),o.textContent="view more",o.dataset.id=e[d].id,l.appendChild(o);const r=document.createElement("span");r.classList.add("material-icons"),r.textContent="delete",r.classList.add("complitedTasksDeleteButton"),r.dataset.id=e[d].id,l.appendChild(r),document.createElement("div").classList.add("priority"),n.appendChild(l),s.appendChild(n),g.appendChild(s)}},A=document.querySelector(".bgFive"),U=document.querySelector(".deleteTasksTwo"),M=document.querySelector(".cancelTwo");document.addEventListener("click",(d=>{d.target.classList.contains("complitedTasksDeleteButton")&&(A.classList.remove("visiblity"),M.addEventListener("click",(()=>{A.classList.add("visiblity")})),U.addEventListener("click",(()=>{for(let t=0;t<e.length;t++)e[t].id==d.target.dataset.id&&e.splice(t,1);N(),console.log(t),A.classList.add("visiblity"),window.localStorage.setItem("newArr",JSON.stringify(t))})))}));const O=document.querySelector(".bgSix"),F=(document.querySelector(".closeTasksUpdate"),document.querySelector(".updateNameTasks")),$=document.querySelector(".updateDescriptiontasks"),J=document.querySelector(".updateDateTasks"),D=document.querySelector(".updatePriorityTasksInput"),_=document.querySelector(".noValidUpdateOne"),z=document.querySelector(".noValidUpdateTwo"),H=document.querySelector(".noValidUpdateThree"),G=document.querySelector(".noValidUpdateFour");document.querySelector(".UpdateTasksButton"),document.addEventListener("click",(e=>{let d=0,s=0;if(e.target.classList.contains("editButton")){for(let n=1;n<t.length;n++)for(let a=0;a<t[n].tasks.length;a++)t[n].tasks[a].id==e.target.dataset.id&&(d=n,s=a);F.value=t[d].tasks[s].name,$.value=t[d].tasks[s].decription,J.value=t[d].tasks[s].date,D.value=t[d].tasks[s].priority,O.classList.remove("visiblity"),console.log(d,s),document.addEventListener("click",(e=>{e.target.classList.contains("closeTasksClick")&&(F.value="",$.value="",J.value="",D.value="",O.classList.add("visiblity"))})),document.addEventListener("click",(e=>{if(e.target.classList.contains("UpdateTasksButton")){if((()=>{let e=0;return F.value?(_.classList.add("visiblity"),F.style.border="1px solid black"):(_.classList.remove("visiblity"),F.style.border="1px solid red",e++),$.value?(z.classList.add("visiblity"),$.style.border="1px solid black"):(z.classList.remove("visiblity"),$.style.border="1px solid red",e++),J.value?(H.classList.add("visiblity"),J.style.border="1px solid black"):(H.classList.remove("visiblity"),J.style.border="1px solid red",e++),D.value?(G.classList.add("visiblity"),D.style.border="1px solid black"):(G.classList.remove("visiblity"),D.style.border="1px solid red",e++),{countTest:e}})().countTest)return;try{const n={name:F.value,decription:$.value,date:J.value,priority:D.value,id:e.target.dataset.id};t[d].tasks.splice(s,1,n),console.log(d,s),F.value="",$.value="",J.value="",D.value="",d=0,s=0,O.classList.add("visiblity"),"all"==r?p():Q(),console.log(t),window.localStorage.setItem("newArr",JSON.stringify(t))}catch(e){console.log(e)}}}))}}));const K=e=>{const t=document.createElement("div");t.textContent=e,t.classList.add("nowPageName"),g.appendChild(t)},Q=()=>{let e,d;g.textContent="",K(r);for(let d=0;d<t.length;d++)t[d].name==r&&(e=d);for(let s=0;s<t[e].tasks.length;s++){"low"==t[e].tasks[s].priority?d="lightblue":"medium"==t[e].tasks[s].priority?d="orange":"high"==t[e].tasks[s].priority&&(d="red");const n=document.createElement("div");n.classList.add("manyProjects");const a=document.createElement("div");a.dataset.id=t[e].tasks[s].id,a.classList.add("tasks"),a.classList.add(d);const c=document.createElement("div");c.classList.add("name-and-priority");const i=document.createElement("div"),l=document.createElement("input");l.dataset.id=t[e].tasks[s].id,l.classList.add("checkbox"),l.type="checkbox",i.appendChild(l),c.appendChild(i);const o=document.createElement("div");o.textContent=t[e].tasks[s].name,o.classList.add("name"),c.appendChild(o),a.appendChild(c);const r=document.createElement("div");r.classList.add("delete");const p=document.createElement("button");p.classList.add("editButton"),p.textContent="edit",p.dataset.id=t[e].tasks[s].id,r.appendChild(p);const m=document.createElement("button");m.classList.add("viewMoreBtn"),m.textContent="view more",m.dataset.id=t[e].tasks[s].id,r.appendChild(m);const u=document.createElement("span");u.classList.add("material-icons"),u.classList.add("delete"),u.textContent="delete",u.dataset.id=t[e].tasks[s].id,document.createElement("div").classList.add("priority"),r.appendChild(u),a.appendChild(r),n.appendChild(a),g.appendChild(n)}};let R,W;document.addEventListener("click",(e=>{e.target.classList.contains("closeBtnMore")&&([...document.getElementsByClassName("moreContent")].map((e=>e&&e.remove())),[...document.getElementsByClassName("bgThree")].map((e=>e&&e.remove())))}));const X=()=>{const e=document.createElement("div");e.classList.add("moreContent");const d=document.createElement("div");d.classList.add("closeBtnMore"),d.classList.add("material-icons"),d.textContent="close",e.appendChild(d);const s=document.createElement("div");s.classList.add("nameProject-and-description");const n=document.createElement("div");n.textContent=`name: ${t[R].tasks[W].name}`,n.classList.add("nameProject"),s.appendChild(n);const a=document.createElement("div");a.textContent=`description: ${t[R].tasks[W].decription}`,a.classList.add("descriptionProject"),s.appendChild(a),e.appendChild(s);const c=document.createElement("div");c.classList.add("date-and-priority");const i=document.createElement("div");i.textContent=`date: ${t[R].tasks[W].date}`,i.classList.add("dateProject"),c.appendChild(i);const l=document.createElement("div");l.textContent=`priority: ${t[R].tasks[W].priority}`,l.classList.add("priorityProject"),c.appendChild(l),e.appendChild(c);const o=document.createElement("div");o.classList.add("bgThree"),o.appendChild(e),document.body.appendChild(o)},Y=()=>{h.textContent="";for(let e=1;e<t.length;e++)if("inbox"==t[e].name);else{const d=document.createElement("p");d.classList.add("projectsNameInPage"),d.textContent=t[e].name,d.textContent&&h.appendChild(d)}projectsNameInPage=document.querySelectorAll(".projectsNameInPage")};d.addEventListener("click",(()=>{"expand_more"==s.textContent?s.textContent="expand_less":s.textContent="expand_more",n.classList.toggle("visiblity"),a.classList.toggle("overflow"),a.classList.toggle("overflowHidden")})),r="inbox",Q()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,